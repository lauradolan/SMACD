using System;
using System.Threading.Tasks;
using SMACD.Shared.Attributes;
using SMACD.Shared.Extensions;
using SMACD.Shared.Plugins.Scorers;

namespace SMACD.Plugins.Dummy
{
    // ScorerMetadata specifies information about the plugin.
    // The "identifier" is the name used on the Service Map to locate this plugin when it needs to be used in some way
    // The "name" is the name of the plugin for log and display purposes
    [ScorerMetadata("dummy", Name = "Dummy Scanner Default Scorer")]
    public class DummyScannerScorer : Scorer
    {
        public DummyScannerScorer(string workingDirectory) : base(workingDirectory)
        {
        }

        public override async Task GenerateScore(VulnerabilitySummary summary)
        {
            // LoadResultArtifact can be called from the Scorer instance, to load the information stored to the working
            //   directory by SaveResultArtifact. Again, this handles resolving the working directory.
            var reloaded = this.LoadResultArtifact<DummyData>("dummy.dat");

            // This plugin doesn't do anything since it is a dummy; however, normal plugins might interpret and/or
            //   summarize the information generated by an Attack Tool. Scorers do not have to be shipped with Attack Tools;
            //   if there is an alternative way of aggregating information generated by an Attack Tool, modular scorers
            //   allow implementers to have more freedom over their automated assessments

            await Task.FromResult(0);
        }

        public override Task<bool> ConvergeSummary(VulnerabilitySummary summary)
        {
            // This function will be run repeatedly until all plugins that are being converged report that they have not
            //   made any changes to the VulnerabilitySummary instance (by returning FALSE). The summary instance represents
            //   all relevant information aggregated by all plugins referenced on the Service Map.

            return Task.FromResult(false);
        }
    }
}