using SMACD.PluginHost.Attributes;
using SMACD.PluginHost.Extensions;
using SMACD.PluginHost.Plugins;
using SMACD.PluginHost.Reports;

namespace SMACD.Plugins.Dummy
{
    [PluginImplementation(PluginTypes.Scorer, "dummy")]
    public class DummyScorer : Plugin
    {
        public DummyScorer(string workingDirectory) : base(workingDirectory)
        {
        }

        public override ScoredResult Execute()
        {
            // LoadResultArtifact can be called from the Scorer instance, to load the information stored to the working
            //   directory by SaveResultArtifact. Again, this handles resolving the working directory.
            var reloaded = WorkingDirectory.ParentResource.GetMostRecent(PluginTypes.AttackTool).LoadResultArtifact<DummyData>("dummy.dat");

            // This plugin doesn't do anything since it is a dummy; however, normal plugins might interpret and/or
            //   summarize the information generated by an Attack Tool. Scorers do not have to be shipped with Attack Tools;
            //   if there is an alternative way of aggregating information generated by an Attack Tool, modular scorers
            //   allow implementers to have more freedom over their automated assessments
            return CreateBlankScoredResult();
        }
    }
}