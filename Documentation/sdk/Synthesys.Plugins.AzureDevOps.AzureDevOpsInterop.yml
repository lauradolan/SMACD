### YamlMime:ManagedReference
items:
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  commentId: T:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  id: AzureDevOpsInterop
  parent: Synthesys.Plugins.AzureDevOps
  children:
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.#ctor(Microsoft.VisualStudio.Services.WebApi.VssConnection)
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String)
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String,System.String,System.Int32,System.String)
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem(System.String,SMACD.AppTree.Vulnerability.RiskLevels,System.String)
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName
  langs:
  - csharp
  - vb
  name: AzureDevOpsInterop
  nameWithType: AzureDevOpsInterop
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  type: Class
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: AzureDevOpsInterop
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 16
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  summary: "\nProvides functions to work with objects in Azure DevOps\n"
  example: []
  syntax:
    content: public class AzureDevOpsInterop
    content.vb: Public Class AzureDevOpsInterop
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection
  commentId: P:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection
  id: Connection
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: AzureDevOpsInterop.Connection
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Connection
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 21
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  summary: "\nVSS Overarching Connection\n"
  example: []
  syntax:
    content: public VssConnection Connection { get; }
    parameters: []
    return:
      type: Microsoft.VisualStudio.Services.WebApi.VssConnection
    content.vb: Public ReadOnly Property Connection As VssConnection
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName
  commentId: P:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName
  id: RepositoryName
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: RepositoryName
  nameWithType: AzureDevOpsInterop.RepositoryName
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: RepositoryName
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 26
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  summary: "\nRepository Name from Build Agent environment\n"
  example: []
  syntax:
    content: public string RepositoryName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RepositoryName As String
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId
  commentId: P:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId
  id: PullRequestId
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: PullRequestId
  nameWithType: AzureDevOpsInterop.PullRequestId
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: PullRequestId
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 31
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  summary: "\nPull Request ID which prompted the build\n"
  example: []
  syntax:
    content: public int PullRequestId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PullRequestId As Integer
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId
  commentId: P:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId
  id: ProjectId
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: AzureDevOpsInterop.ProjectId
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ProjectId
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 36
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  summary: "\nProject ID which prompted the build\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.#ctor(Microsoft.VisualStudio.Services.WebApi.VssConnection)
  commentId: M:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.#ctor(Microsoft.VisualStudio.Services.WebApi.VssConnection)
  id: '#ctor(Microsoft.VisualStudio.Services.WebApi.VssConnection)'
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: AzureDevOpsInterop(VssConnection)
  nameWithType: AzureDevOpsInterop.AzureDevOpsInterop(VssConnection)
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.AzureDevOpsInterop(Microsoft.VisualStudio.Services.WebApi.VssConnection)
  type: Constructor
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 42
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  summary: "\nProvides functions to work with objects in Azure DevOps\n"
  example: []
  syntax:
    content: public AzureDevOpsInterop(VssConnection connection)
    parameters:
    - id: connection
      type: Microsoft.VisualStudio.Services.WebApi.VssConnection
      description: Authenticated VssConnection to Azure DevOps
    content.vb: Public Sub New(connection As VssConnection)
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String)
  commentId: M:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String)
  id: CreateThreadInPullRequest(System.String)
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: CreateThreadInPullRequest(String)
  nameWithType: AzureDevOpsInterop.CreateThreadInPullRequest(String)
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String)
  type: Method
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: CreateThreadInPullRequest
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 46
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public Task<GitPullRequestCommentThread> CreateThreadInPullRequest(string content)
    parameters:
    - id: content
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread}
    content.vb: Public Function CreateThreadInPullRequest(content As String) As Task(Of GitPullRequestCommentThread)
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String,System.String,System.Int32,System.String)
  commentId: M:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String,System.String,System.Int32,System.String)
  id: CreateThreadInPullRequest(System.String,System.String,System.Int32,System.String)
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: CreateThreadInPullRequest(String, String, Int32, String)
  nameWithType: AzureDevOpsInterop.CreateThreadInPullRequest(String, String, Int32, String)
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest(System.String, System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: CreateThreadInPullRequest
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 49
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public Task<GitPullRequestCommentThread> CreateThreadInPullRequest(string projectId, string repositoryId, int pullRequestId, string content)
    parameters:
    - id: projectId
      type: System.String
    - id: repositoryId
      type: System.String
    - id: pullRequestId
      type: System.Int32
    - id: content
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread}
    content.vb: Public Function CreateThreadInPullRequest(projectId As String, repositoryId As String, pullRequestId As Integer, content As String) As Task(Of GitPullRequestCommentThread)
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem(System.String,SMACD.AppTree.Vulnerability.RiskLevels,System.String)
  commentId: M:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem(System.String,SMACD.AppTree.Vulnerability.RiskLevels,System.String)
  id: CreateWorkItem(System.String,SMACD.AppTree.Vulnerability.RiskLevels,System.String)
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop
  langs:
  - csharp
  - vb
  name: CreateWorkItem(String, Vulnerability.RiskLevels, String)
  nameWithType: AzureDevOpsInterop.CreateWorkItem(String, Vulnerability.RiskLevels, String)
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem(System.String, SMACD.AppTree.Vulnerability.RiskLevels, System.String)
  type: Method
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: CreateWorkItem
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsInterop.cs
    startLine: 75
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public Task<WorkItem> CreateWorkItem(string projectId, Vulnerability.RiskLevels riskLevel, string content)
    parameters:
    - id: projectId
      type: System.String
    - id: riskLevel
      type: SMACD.AppTree.Vulnerability.RiskLevels
    - id: content
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem}
    content.vb: Public Function CreateWorkItem(projectId As String, riskLevel As Vulnerability.RiskLevels, content As String) As Task(Of WorkItem)
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Synthesys.Plugins.AzureDevOps
  commentId: N:Synthesys.Plugins.AzureDevOps
  name: Synthesys.Plugins.AzureDevOps
  nameWithType: Synthesys.Plugins.AzureDevOps
  fullName: Synthesys.Plugins.AzureDevOps
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection
  name: Connection
  nameWithType: AzureDevOpsInterop.Connection
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.Connection
- uid: Microsoft.VisualStudio.Services.WebApi.VssConnection
  commentId: T:Microsoft.VisualStudio.Services.WebApi.VssConnection
  parent: Microsoft.VisualStudio.Services.WebApi
  isExternal: true
  name: VssConnection
  nameWithType: VssConnection
  fullName: Microsoft.VisualStudio.Services.WebApi.VssConnection
- uid: Microsoft.VisualStudio.Services.WebApi
  commentId: N:Microsoft.VisualStudio.Services.WebApi
  isExternal: true
  name: Microsoft.VisualStudio.Services.WebApi
  nameWithType: Microsoft.VisualStudio.Services.WebApi
  fullName: Microsoft.VisualStudio.Services.WebApi
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName
  name: RepositoryName
  nameWithType: AzureDevOpsInterop.RepositoryName
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.RepositoryName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId
  name: PullRequestId
  nameWithType: AzureDevOpsInterop.PullRequestId
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.PullRequestId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId
  name: ProjectId
  nameWithType: AzureDevOpsInterop.ProjectId
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.ProjectId
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.#ctor*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.#ctor
  name: AzureDevOpsInterop
  nameWithType: AzureDevOpsInterop.AzureDevOpsInterop
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.AzureDevOpsInterop
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest
  name: CreateThreadInPullRequest
  nameWithType: AzureDevOpsInterop.CreateThreadInPullRequest
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateThreadInPullRequest
- uid: System.Threading.Tasks.Task{Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread}
  commentId: T:System.Threading.Tasks.Task{Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GitPullRequestCommentThread>
  nameWithType: Task<GitPullRequestCommentThread>
  fullName: System.Threading.Tasks.Task<Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread>
  nameWithType.vb: Task(Of GitPullRequestCommentThread)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread)
  name.vb: Task(Of GitPullRequestCommentThread)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread
    name: GitPullRequestCommentThread
    nameWithType: GitPullRequestCommentThread
    fullName: Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread
    name: GitPullRequestCommentThread
    nameWithType: GitPullRequestCommentThread
    fullName: Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem
  name: CreateWorkItem
  nameWithType: AzureDevOpsInterop.CreateWorkItem
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsInterop.CreateWorkItem
- uid: SMACD.AppTree.Vulnerability.RiskLevels
  commentId: T:SMACD.AppTree.Vulnerability.RiskLevels
  parent: SMACD.AppTree
  name: Vulnerability.RiskLevels
  nameWithType: Vulnerability.RiskLevels
  fullName: SMACD.AppTree.Vulnerability.RiskLevels
- uid: System.Threading.Tasks.Task{Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem}
  commentId: T:System.Threading.Tasks.Task{Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WorkItem>
  nameWithType: Task<WorkItem>
  fullName: System.Threading.Tasks.Task<Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem>
  nameWithType.vb: Task(Of WorkItem)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem)
  name.vb: Task(Of WorkItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem
    name: WorkItem
    nameWithType: WorkItem
    fullName: Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem
    name: WorkItem
    nameWithType: WorkItem
    fullName: Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
