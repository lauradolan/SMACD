### YamlMime:ManagedReference
items:
- uid: Synthesys.Tasks.Session
  commentId: T:Synthesys.Tasks.Session
  id: Session
  parent: Synthesys.Tasks
  children:
  - Synthesys.Tasks.Session.#ctor
  - Synthesys.Tasks.Session.Artifacts
  - Synthesys.Tasks.Session.Export(System.IO.Stream)
  - Synthesys.Tasks.Session.Import(System.IO.Stream)
  - Synthesys.Tasks.Session.Reports
  - Synthesys.Tasks.Session.ServiceMapYaml
  - Synthesys.Tasks.Session.Tasks
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: Session
  fullName: Synthesys.Tasks.Session
  type: Class
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Session
    path: ../Synthesys.Tasks/Session.cs
    startLine: 11
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  syntax:
    content: public class Session
    content.vb: Public Class Session
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.Tasks.Session.Import(System.IO.Stream)
  commentId: M:Synthesys.Tasks.Session.Import(System.IO.Stream)
  id: Import(System.IO.Stream)
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: Import(Stream)
  nameWithType: Session.Import(Stream)
  fullName: Synthesys.Tasks.Session.Import(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Import
    path: ../Synthesys.Tasks/Session.cs
    startLine: 18
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nCreate a Session from a previously exported Session\n"
  example: []
  syntax:
    content: public static Session Import(Stream existingSession)
    parameters:
    - id: existingSession
      type: System.IO.Stream
      description: Previously exported Session
    return:
      type: Synthesys.Tasks.Session
      description: Imported and linked Session
    content.vb: Public Shared Function Import(existingSession As Stream) As Session
  overload: Synthesys.Tasks.Session.Import*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Synthesys.Tasks.Session.#ctor
  commentId: M:Synthesys.Tasks.Session.#ctor
  id: '#ctor'
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: Session()
  nameWithType: Session.Session()
  fullName: Synthesys.Tasks.Session.Session()
  type: Constructor
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.Tasks/Session.cs
    startLine: 46
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nCreate a new Session\n"
  example: []
  syntax:
    content: public Session()
    content.vb: Public Sub New
  overload: Synthesys.Tasks.Session.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.Tasks.Session.Tasks
  commentId: P:Synthesys.Tasks.Session.Tasks
  id: Tasks
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: Tasks
  nameWithType: Session.Tasks
  fullName: Synthesys.Tasks.Session.Tasks
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Tasks
    path: ../Synthesys.Tasks/Session.cs
    startLine: 59
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nTask queue\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public TaskToolbox Tasks { get; }
    parameters: []
    return:
      type: Synthesys.Tasks.TaskToolbox
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Tasks As TaskToolbox
  overload: Synthesys.Tasks.Session.Tasks*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Tasks.Session.Artifacts
  commentId: P:Synthesys.Tasks.Session.Artifacts
  id: Artifacts
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: Artifacts
  nameWithType: Session.Artifacts
  fullName: Synthesys.Tasks.Session.Artifacts
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Artifacts
    path: ../Synthesys.Tasks/Session.cs
    startLine: 65
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nArtifact tree root\n"
  example: []
  syntax:
    content: public RootNode Artifacts { get; }
    parameters: []
    return:
      type: SMACD.AppTree.RootNode
    content.vb: Public ReadOnly Property Artifacts As RootNode
  overload: Synthesys.Tasks.Session.Artifacts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Tasks.Session.Reports
  commentId: P:Synthesys.Tasks.Session.Reports
  id: Reports
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: Reports
  nameWithType: Session.Reports
  fullName: Synthesys.Tasks.Session.Reports
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Reports
    path: ../Synthesys.Tasks/Session.cs
    startLine: 70
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nReports which have been generated by Extensions in this Session\n"
  example: []
  syntax:
    content: public List<ExtensionReport> Reports { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}
    content.vb: Public ReadOnly Property Reports As List(Of ExtensionReport)
  overload: Synthesys.Tasks.Session.Reports*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.Tasks.Session.ServiceMapYaml
  commentId: P:Synthesys.Tasks.Session.ServiceMapYaml
  id: ServiceMapYaml
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: ServiceMapYaml
  nameWithType: Session.ServiceMapYaml
  fullName: Synthesys.Tasks.Session.ServiceMapYaml
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ServiceMapYaml
    path: ../Synthesys.Tasks/Session.cs
    startLine: 75
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nService Map YAML generating this Session\n"
  example: []
  syntax:
    content: public string ServiceMapYaml { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceMapYaml As String
  overload: Synthesys.Tasks.Session.ServiceMapYaml*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Tasks.Session.Export(System.IO.Stream)
  commentId: M:Synthesys.Tasks.Session.Export(System.IO.Stream)
  id: Export(System.IO.Stream)
  parent: Synthesys.Tasks.Session
  langs:
  - csharp
  - vb
  name: Export(Stream)
  nameWithType: Session.Export(Stream)
  fullName: Synthesys.Tasks.Session.Export(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Synthesys.Tasks/Session.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Export
    path: ../Synthesys.Tasks/Session.cs
    startLine: 81
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nExport the Session&apos;s reports and Artifacts to a Stream\n"
  example: []
  syntax:
    content: public void Export(Stream data)
    parameters:
    - id: data
      type: System.IO.Stream
      description: Stream to contain Session data
    content.vb: Public Sub Export(data As Stream)
  overload: Synthesys.Tasks.Session.Export*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Synthesys.Tasks
  commentId: N:Synthesys.Tasks
  name: Synthesys.Tasks
  nameWithType: Synthesys.Tasks
  fullName: Synthesys.Tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.Tasks.Session.Import*
  commentId: Overload:Synthesys.Tasks.Session.Import
  name: Import
  nameWithType: Session.Import
  fullName: Synthesys.Tasks.Session.Import
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Synthesys.Tasks.Session
  commentId: T:Synthesys.Tasks.Session
  parent: Synthesys.Tasks
  name: Session
  nameWithType: Session
  fullName: Synthesys.Tasks.Session
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Synthesys.Tasks.Session.#ctor*
  commentId: Overload:Synthesys.Tasks.Session.#ctor
  name: Session
  nameWithType: Session.Session
  fullName: Synthesys.Tasks.Session.Session
- uid: Synthesys.Tasks.Session.Tasks*
  commentId: Overload:Synthesys.Tasks.Session.Tasks
  name: Tasks
  nameWithType: Session.Tasks
  fullName: Synthesys.Tasks.Session.Tasks
- uid: Synthesys.Tasks.TaskToolbox
  commentId: T:Synthesys.Tasks.TaskToolbox
  parent: Synthesys.Tasks
  name: TaskToolbox
  nameWithType: TaskToolbox
  fullName: Synthesys.Tasks.TaskToolbox
- uid: Synthesys.Tasks.Session.Artifacts*
  commentId: Overload:Synthesys.Tasks.Session.Artifacts
  name: Artifacts
  nameWithType: Session.Artifacts
  fullName: Synthesys.Tasks.Session.Artifacts
- uid: SMACD.AppTree.RootNode
  commentId: T:SMACD.AppTree.RootNode
  parent: SMACD.AppTree
  name: RootNode
  nameWithType: RootNode
  fullName: SMACD.AppTree.RootNode
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
- uid: Synthesys.Tasks.Session.Reports*
  commentId: Overload:Synthesys.Tasks.Session.Reports
  name: Reports
  nameWithType: Session.Reports
  fullName: Synthesys.Tasks.Session.Reports
- uid: System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}
  commentId: T:System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExtensionReport>
  nameWithType: List<ExtensionReport>
  fullName: System.Collections.Generic.List<Synthesys.SDK.ExtensionReport>
  nameWithType.vb: List(Of ExtensionReport)
  fullName.vb: System.Collections.Generic.List(Of Synthesys.SDK.ExtensionReport)
  name.vb: List(Of ExtensionReport)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Synthesys.SDK.ExtensionReport
    name: ExtensionReport
    nameWithType: ExtensionReport
    fullName: Synthesys.SDK.ExtensionReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Synthesys.SDK.ExtensionReport
    name: ExtensionReport
    nameWithType: ExtensionReport
    fullName: Synthesys.SDK.ExtensionReport
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Synthesys.Tasks.Session.ServiceMapYaml*
  commentId: Overload:Synthesys.Tasks.Session.ServiceMapYaml
  name: ServiceMapYaml
  nameWithType: Session.ServiceMapYaml
  fullName: Synthesys.Tasks.Session.ServiceMapYaml
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Synthesys.Tasks.Session.Export*
  commentId: Overload:Synthesys.Tasks.Session.Export
  name: Export
  nameWithType: Session.Export
  fullName: Synthesys.Tasks.Session.Export
