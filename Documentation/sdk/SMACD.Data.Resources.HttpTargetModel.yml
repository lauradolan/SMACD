### YamlMime:ManagedReference
items:
- uid: SMACD.Data.Resources.HttpTargetModel
  commentId: T:SMACD.Data.Resources.HttpTargetModel
  id: HttpTargetModel
  parent: SMACD.Data.Resources
  children:
  - SMACD.Data.Resources.HttpTargetModel.Fields
  - SMACD.Data.Resources.HttpTargetModel.Headers
  - SMACD.Data.Resources.HttpTargetModel.Method
  - SMACD.Data.Resources.HttpTargetModel.Url
  langs:
  - csharp
  - vb
  name: HttpTargetModel
  nameWithType: HttpTargetModel
  fullName: SMACD.Data.Resources.HttpTargetModel
  type: Class
  source:
    remote:
      path: SMACD.Data/Resources/HttpResourceModel.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: HttpTargetModel
    path: ../SMACD.Data/Resources/HttpResourceModel.cs
    startLine: 7
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data.Resources
  summary: "\nRepresents a Target resolved to its handler\n"
  example: []
  syntax:
    content: 'public class HttpTargetModel : TargetModel, IModel'
    content.vb: >-
      Public Class HttpTargetModel

          Inherits TargetModel

          Implements IModel
  inheritance:
  - System.Object
  - SMACD.Data.TargetModel
  implements:
  - SMACD.Data.IModel
  inheritedMembers:
  - SMACD.Data.TargetModel.TargetId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SMACD.Data.Resources.HttpTargetModel.Fields
  commentId: F:SMACD.Data.Resources.HttpTargetModel.Fields
  id: Fields
  parent: SMACD.Data.Resources.HttpTargetModel
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: HttpTargetModel.Fields
  fullName: SMACD.Data.Resources.HttpTargetModel.Fields
  type: Field
  source:
    remote:
      path: SMACD.Data/Resources/HttpResourceModel.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Fields
    path: ../SMACD.Data/Resources/HttpResourceModel.cs
    startLine: 12
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data.Resources
  summary: "\nField values to send when POSTing to this URL\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Fields
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Fields As Dictionary(Of String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SMACD.Data.Resources.HttpTargetModel.Headers
  commentId: F:SMACD.Data.Resources.HttpTargetModel.Headers
  id: Headers
  parent: SMACD.Data.Resources.HttpTargetModel
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: HttpTargetModel.Headers
  fullName: SMACD.Data.Resources.HttpTargetModel.Headers
  type: Field
  source:
    remote:
      path: SMACD.Data/Resources/HttpResourceModel.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Headers
    path: ../SMACD.Data/Resources/HttpResourceModel.cs
    startLine: 17
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data.Resources
  summary: "\nHeaders to send when accessing this URL (regardless of Method)\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Headers
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Headers As Dictionary(Of String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SMACD.Data.Resources.HttpTargetModel.Method
  commentId: P:SMACD.Data.Resources.HttpTargetModel.Method
  id: Method
  parent: SMACD.Data.Resources.HttpTargetModel
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: HttpTargetModel.Method
  fullName: SMACD.Data.Resources.HttpTargetModel.Method
  type: Property
  source:
    remote:
      path: SMACD.Data/Resources/HttpResourceModel.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Method
    path: ../SMACD.Data/Resources/HttpResourceModel.cs
    startLine: 22
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data.Resources
  summary: "\nMethod used to query the URL\n"
  example: []
  syntax:
    content: public string Method { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Method As String
  overload: SMACD.Data.Resources.HttpTargetModel.Method*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.Data.Resources.HttpTargetModel.Url
  commentId: P:SMACD.Data.Resources.HttpTargetModel.Url
  id: Url
  parent: SMACD.Data.Resources.HttpTargetModel
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: HttpTargetModel.Url
  fullName: SMACD.Data.Resources.HttpTargetModel.Url
  type: Property
  source:
    remote:
      path: SMACD.Data/Resources/HttpResourceModel.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Url
    path: ../SMACD.Data/Resources/HttpResourceModel.cs
    startLine: 27
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data.Resources
  summary: "\nURL being accessed by Target\n"
  example: []
  syntax:
    content: public string Url { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Url As String
  overload: SMACD.Data.Resources.HttpTargetModel.Url*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SMACD.Data.Resources
  commentId: N:SMACD.Data.Resources
  name: SMACD.Data.Resources
  nameWithType: SMACD.Data.Resources
  fullName: SMACD.Data.Resources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SMACD.Data.TargetModel
  commentId: T:SMACD.Data.TargetModel
  parent: SMACD.Data
  name: TargetModel
  nameWithType: TargetModel
  fullName: SMACD.Data.TargetModel
- uid: SMACD.Data.IModel
  commentId: T:SMACD.Data.IModel
  parent: SMACD.Data
  name: IModel
  nameWithType: IModel
  fullName: SMACD.Data.IModel
- uid: SMACD.Data.TargetModel.TargetId
  commentId: P:SMACD.Data.TargetModel.TargetId
  parent: SMACD.Data.TargetModel
  name: TargetId
  nameWithType: TargetModel.TargetId
  fullName: SMACD.Data.TargetModel.TargetId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SMACD.Data
  commentId: N:SMACD.Data
  name: SMACD.Data
  nameWithType: SMACD.Data
  fullName: SMACD.Data
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SMACD.Data.Resources.HttpTargetModel.Method*
  commentId: Overload:SMACD.Data.Resources.HttpTargetModel.Method
  name: Method
  nameWithType: HttpTargetModel.Method
  fullName: SMACD.Data.Resources.HttpTargetModel.Method
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SMACD.Data.Resources.HttpTargetModel.Url*
  commentId: Overload:SMACD.Data.Resources.HttpTargetModel.Url
  name: Url
  nameWithType: HttpTargetModel.Url
  fullName: SMACD.Data.Resources.HttpTargetModel.Url
