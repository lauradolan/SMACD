### YamlMime:ManagedReference
items:
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  commentId: T:Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  id: AzureDevOpsService
  parent: Synthesys.Plugins.AzureDevOps
  children:
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsService.#ctor
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken
  - Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  langs:
  - csharp
  - vb
  name: AzureDevOpsService
  nameWithType: AzureDevOpsService
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  type: Class
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: AzureDevOpsService
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
    startLine: 21
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: >-
      [Extension("azuredevops", Name = "Azure DevOps Integration", Version = "1.0.0", Author = "Anthony Turner", Website = "https://github.com/anthturner/smacd")]

      public class AzureDevOpsService : ReactionExtension
    content.vb: >-
      <Extension("azuredevops", Name:="Azure DevOps Integration", Version:="1.0.0", Author:="Anthony Turner", Website:="https://github.com/anthturner/smacd")>

      Public Class AzureDevOpsService

          Inherits ReactionExtension
  inheritance:
  - System.Object
  - Synthesys.SDK.Extensions.Extension
  - Synthesys.SDK.Extensions.ReactionExtension
  inheritedMembers:
  - Synthesys.SDK.Extensions.ReactionExtension.Triggers
  - Synthesys.SDK.Extensions.Extension.Logger
  - Synthesys.SDK.Extensions.Extension.Initialize
  - Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  - Synthesys.SDK.Extensions.Extension.Metadata
  - Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  - Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Synthesys.SDK.Extensions.Extension.Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: Synthesys.SDK.Attributes.ExtensionAttribute
    ctor: Synthesys.SDK.Attributes.ExtensionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: azuredevops
    namedArguments:
    - name: Name
      type: System.String
      value: Azure DevOps Integration
    - name: Version
      type: System.String
      value: 1.0.0
    - name: Author
      type: System.String
      value: Anthony Turner
    - name: Website
      type: System.String
      value: https://github.com/anthturner/smacd
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.#ctor
  commentId: M:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.#ctor
  id: '#ctor'
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  langs:
  - csharp
  - vb
  name: AzureDevOpsService()
  nameWithType: AzureDevOpsService.AzureDevOpsService()
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.AzureDevOpsService()
  type: Constructor
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
    startLine: 29
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public AzureDevOpsService()
    content.vb: Public Sub New
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl
  commentId: P:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl
  id: OrganizationUrl
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  langs:
  - csharp
  - vb
  name: OrganizationUrl
  nameWithType: AzureDevOpsService.OrganizationUrl
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: OrganizationUrl
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
    startLine: 42
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public string OrganizationUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OrganizationUrl As String
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken
  commentId: P:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken
  id: PersonalAccessToken
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  langs:
  - csharp
  - vb
  name: PersonalAccessToken
  nameWithType: AzureDevOpsService.PersonalAccessToken
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: PersonalAccessToken
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
    startLine: 43
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public string PersonalAccessToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PersonalAccessToken As String
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  commentId: M:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  id: React(Synthesys.SDK.Triggers.TriggerDescriptor)
  parent: Synthesys.Plugins.AzureDevOps.AzureDevOpsService
  langs:
  - csharp
  - vb
  name: React(TriggerDescriptor)
  nameWithType: AzureDevOpsService.React(TriggerDescriptor)
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  type: Method
  source:
    remote:
      path: Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: React
    path: ../Synthesys.Plugins.AzureDevOps/AzureDevOpsService.cs
    startLine: 71
  assemblies:
  - Synthesys.Plugins.AzureDevOps
  namespace: Synthesys.Plugins.AzureDevOps
  syntax:
    content: public override ExtensionReport React(TriggerDescriptor trigger)
    parameters:
    - id: trigger
      type: Synthesys.SDK.Triggers.TriggerDescriptor
    return:
      type: Synthesys.SDK.ExtensionReport
    content.vb: Public Overrides Function React(trigger As TriggerDescriptor) As ExtensionReport
  overridden: Synthesys.SDK.Extensions.ReactionExtension.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  overload: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Synthesys.Plugins.AzureDevOps
  commentId: N:Synthesys.Plugins.AzureDevOps
  name: Synthesys.Plugins.AzureDevOps
  nameWithType: Synthesys.Plugins.AzureDevOps
  fullName: Synthesys.Plugins.AzureDevOps
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Synthesys.SDK.Extensions.Extension
  commentId: T:Synthesys.SDK.Extensions.Extension
  parent: Synthesys.SDK.Extensions
  name: Extension
  nameWithType: Extension
  fullName: Synthesys.SDK.Extensions.Extension
- uid: Synthesys.SDK.Extensions.ReactionExtension
  commentId: T:Synthesys.SDK.Extensions.ReactionExtension
  parent: Synthesys.SDK.Extensions
  name: ReactionExtension
  nameWithType: ReactionExtension
  fullName: Synthesys.SDK.Extensions.ReactionExtension
- uid: Synthesys.SDK.Extensions.ReactionExtension.Triggers
  commentId: P:Synthesys.SDK.Extensions.ReactionExtension.Triggers
  parent: Synthesys.SDK.Extensions.ReactionExtension
  name: Triggers
  nameWithType: ReactionExtension.Triggers
  fullName: Synthesys.SDK.Extensions.ReactionExtension.Triggers
- uid: Synthesys.SDK.Extensions.Extension.Logger
  commentId: P:Synthesys.SDK.Extensions.Extension.Logger
  parent: Synthesys.SDK.Extensions.Extension
  name: Logger
  nameWithType: Extension.Logger
  fullName: Synthesys.SDK.Extensions.Extension.Logger
- uid: Synthesys.SDK.Extensions.Extension.Initialize
  commentId: M:Synthesys.SDK.Extensions.Extension.Initialize
  parent: Synthesys.SDK.Extensions.Extension
  name: Initialize()
  nameWithType: Extension.Initialize()
  fullName: Synthesys.SDK.Extensions.Extension.Initialize()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.Initialize
    name: Initialize
    nameWithType: Extension.Initialize
    fullName: Synthesys.SDK.Extensions.Extension.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.Initialize
    name: Initialize
    nameWithType: Extension.Initialize
    fullName: Synthesys.SDK.Extensions.Extension.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  commentId: M:Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  parent: Synthesys.SDK.Extensions.Extension
  name: ValidateEnvironmentReadiness()
  nameWithType: Extension.ValidateEnvironmentReadiness()
  fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
    name: ValidateEnvironmentReadiness
    nameWithType: Extension.ValidateEnvironmentReadiness
    fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
    name: ValidateEnvironmentReadiness
    nameWithType: Extension.ValidateEnvironmentReadiness
    fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  commentId: M:Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  parent: Synthesys.SDK.Extensions.Extension
  isExternal: true
  name: SetLoggerName(String)
  nameWithType: Extension.SetLoggerName(String)
  fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
    name: SetLoggerName
    nameWithType: Extension.SetLoggerName
    fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
    name: SetLoggerName
    nameWithType: Extension.SetLoggerName
    fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.Metadata
  commentId: P:Synthesys.SDK.Extensions.Extension.Metadata
  parent: Synthesys.SDK.Extensions.Extension
  name: Metadata
  nameWithType: Extension.Metadata
  fullName: Synthesys.SDK.Extensions.Extension.Metadata
- uid: Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  commentId: P:Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  parent: Synthesys.SDK.Extensions.Extension
  name: ConfigurableProperties
  nameWithType: Extension.ConfigurableProperties
  fullName: Synthesys.SDK.Extensions.Extension.ConfigurableProperties
- uid: Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  commentId: P:Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  parent: Synthesys.SDK.Extensions.Extension
  name: ConfigurablePropertyValues
  nameWithType: Extension.ConfigurablePropertyValues
  fullName: Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Synthesys.Tasks.ExtensionConfigurator
  definition: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Configure(AppTreeNode, Dictionary<String, String>)
  nameWithType: ExtensionConfigurator.Configure(AppTreeNode, Dictionary<String, String>)
  fullName: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: ExtensionConfigurator.Configure(AppTreeNode, Dictionary(Of String, String))
  fullName.vb: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Configure(AppTreeNode, Dictionary(Of String, String))
  spec.csharp:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.SDK.Extensions
  commentId: N:Synthesys.SDK.Extensions
  name: Synthesys.SDK.Extensions
  nameWithType: Synthesys.SDK.Extensions
  fullName: Synthesys.SDK.Extensions
- uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Configure(Extension, AppTreeNode, Dictionary<String, String>)
  nameWithType: ExtensionConfigurator.Configure(Extension, AppTreeNode, Dictionary<String, String>)
  fullName: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: ExtensionConfigurator.Configure(Extension, AppTreeNode, Dictionary(Of String, String))
  fullName.vb: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Configure(Extension, AppTreeNode, Dictionary(Of String, String))
  spec.csharp:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Extensions.Extension
    name: Extension
    nameWithType: Extension
    fullName: Synthesys.SDK.Extensions.Extension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Extensions.Extension
    name: Extension
    nameWithType: Extension
    fullName: Synthesys.SDK.Extensions.Extension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Tasks.ExtensionConfigurator
  commentId: T:Synthesys.Tasks.ExtensionConfigurator
  parent: Synthesys.Tasks
  name: ExtensionConfigurator
  nameWithType: ExtensionConfigurator
  fullName: Synthesys.Tasks.ExtensionConfigurator
- uid: Synthesys.Tasks
  commentId: N:Synthesys.Tasks
  name: Synthesys.Tasks
  nameWithType: Synthesys.Tasks
  fullName: Synthesys.Tasks
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.#ctor*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.#ctor
  name: AzureDevOpsService
  nameWithType: AzureDevOpsService.AzureDevOpsService
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.AzureDevOpsService
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl
  name: OrganizationUrl
  nameWithType: AzureDevOpsService.OrganizationUrl
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.OrganizationUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken
  name: PersonalAccessToken
  nameWithType: AzureDevOpsService.PersonalAccessToken
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.PersonalAccessToken
- uid: Synthesys.SDK.Extensions.ReactionExtension.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  commentId: M:Synthesys.SDK.Extensions.ReactionExtension.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  parent: Synthesys.SDK.Extensions.ReactionExtension
  name: React(TriggerDescriptor)
  nameWithType: ReactionExtension.React(TriggerDescriptor)
  fullName: Synthesys.SDK.Extensions.ReactionExtension.React(Synthesys.SDK.Triggers.TriggerDescriptor)
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.ReactionExtension.React(Synthesys.SDK.Triggers.TriggerDescriptor)
    name: React
    nameWithType: ReactionExtension.React
    fullName: Synthesys.SDK.Extensions.ReactionExtension.React
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Triggers.TriggerDescriptor
    name: TriggerDescriptor
    nameWithType: TriggerDescriptor
    fullName: Synthesys.SDK.Triggers.TriggerDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.ReactionExtension.React(Synthesys.SDK.Triggers.TriggerDescriptor)
    name: React
    nameWithType: ReactionExtension.React
    fullName: Synthesys.SDK.Extensions.ReactionExtension.React
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Triggers.TriggerDescriptor
    name: TriggerDescriptor
    nameWithType: TriggerDescriptor
    fullName: Synthesys.SDK.Triggers.TriggerDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React*
  commentId: Overload:Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React
  name: React
  nameWithType: AzureDevOpsService.React
  fullName: Synthesys.Plugins.AzureDevOps.AzureDevOpsService.React
- uid: Synthesys.SDK.Triggers.TriggerDescriptor
  commentId: T:Synthesys.SDK.Triggers.TriggerDescriptor
  parent: Synthesys.SDK.Triggers
  name: TriggerDescriptor
  nameWithType: TriggerDescriptor
  fullName: Synthesys.SDK.Triggers.TriggerDescriptor
- uid: Synthesys.SDK.ExtensionReport
  commentId: T:Synthesys.SDK.ExtensionReport
  parent: Synthesys.SDK
  name: ExtensionReport
  nameWithType: ExtensionReport
  fullName: Synthesys.SDK.ExtensionReport
- uid: Synthesys.SDK.Triggers
  commentId: N:Synthesys.SDK.Triggers
  name: Synthesys.SDK.Triggers
  nameWithType: Synthesys.SDK.Triggers
  fullName: Synthesys.SDK.Triggers
- uid: Synthesys.SDK
  commentId: N:Synthesys.SDK
  name: Synthesys.SDK
  nameWithType: Synthesys.SDK
  fullName: Synthesys.SDK
