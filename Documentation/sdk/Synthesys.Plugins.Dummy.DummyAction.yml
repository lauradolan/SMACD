### YamlMime:ManagedReference
items:
- uid: Synthesys.Plugins.Dummy.DummyAction
  commentId: T:Synthesys.Plugins.Dummy.DummyAction
  id: DummyAction
  parent: Synthesys.Plugins.Dummy
  children:
  - Synthesys.Plugins.Dummy.DummyAction.Act
  - Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption
  - Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2
  - Synthesys.Plugins.Dummy.DummyAction.Host
  - Synthesys.Plugins.Dummy.DummyAction.HttpService
  - Synthesys.Plugins.Dummy.DummyAction.Service
  - Synthesys.Plugins.Dummy.DummyAction.Tasks
  langs:
  - csharp
  - vb
  name: DummyAction
  nameWithType: DummyAction
  fullName: Synthesys.Plugins.Dummy.DummyAction
  type: Class
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: DummyAction
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 20
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nThis plugin does not do meaningful work and is meant to be an example for future Extension development.\n"
  example: []
  syntax:
    content: >-
      [Extension("dummy", Name = "Dummy Action", Version = "1.1.0", Author = "Anthony Turner", Website = "https://github.com/anthturner/smacd")]

      public class DummyAction : ActionExtension, IOperateOnHost, ICanQueueTasks
    content.vb: >-
      <Extension("dummy", Name:="Dummy Action", Version:="1.1.0", Author:="Anthony Turner", Website:="https://github.com/anthturner/smacd")>

      Public Class DummyAction

          Inherits ActionExtension

          Implements IOperateOnHost, ICanQueueTasks
  inheritance:
  - System.Object
  - Synthesys.SDK.Extensions.Extension
  - Synthesys.SDK.Extensions.ActionExtension
  implements:
  - Synthesys.SDK.Capabilities.IOperateOnHost
  - Synthesys.Tasks.Attributes.ICanQueueTasks
  inheritedMembers:
  - Synthesys.SDK.Extensions.Extension.Logger
  - Synthesys.SDK.Extensions.Extension.Initialize
  - Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  - Synthesys.SDK.Extensions.Extension.Metadata
  - Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  - Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Synthesys.SDK.Extensions.Extension.Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: Synthesys.SDK.Attributes.ExtensionAttribute
    ctor: Synthesys.SDK.Attributes.ExtensionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dummy
    namedArguments:
    - name: Name
      type: System.String
      value: Dummy Action
    - name: Version
      type: System.String
      value: 1.1.0
    - name: Author
      type: System.String
      value: Anthony Turner
    - name: Website
      type: System.String
      value: https://github.com/anthturner/smacd
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption
  commentId: P:Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption
  id: ConfigurationOption
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: ConfigurationOption
  nameWithType: DummyAction.ConfigurationOption
  fullName: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ConfigurationOption
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 32
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nArbitrary configuration option in string format\n"
  example: []
  syntax:
    content: >-
      [Configurable("ConfigurationOption")]

      public string ConfigurationOption { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Configurable("ConfigurationOption")>

      Public Property ConfigurationOption As String
  overload: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption*
  attributes:
  - type: Synthesys.SDK.Attributes.ConfigurableAttribute
    ctor: Synthesys.SDK.Attributes.ConfigurableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ConfigurationOption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2
  commentId: P:Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2
  id: ConfigurationOption2
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: ConfigurationOption2
  nameWithType: DummyAction.ConfigurationOption2
  fullName: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ConfigurationOption2
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 38
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nArbitrary configuration option in integer format, deserialized from a string\n"
  example: []
  syntax:
    content: >-
      [Configurable("ConfigurationOption2")]

      public int ConfigurationOption2 { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Configurable("ConfigurationOption2")>

      Public Property ConfigurationOption2 As Integer
  overload: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2*
  attributes:
  - type: Synthesys.SDK.Attributes.ConfigurableAttribute
    ctor: Synthesys.SDK.Attributes.ConfigurableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ConfigurationOption2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.Dummy.DummyAction.HttpService
  commentId: P:Synthesys.Plugins.Dummy.DummyAction.HttpService
  id: HttpService
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: HttpService
  nameWithType: DummyAction.HttpService
  fullName: Synthesys.Plugins.Dummy.DummyAction.HttpService
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: HttpService
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 49
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nHTTP service acted upon by the ActionExtension\nThis property will only be populated if the ActionExtension is queued with an HTTP service as a Target. If no\ncompatible Targets were found, this will remain null.\nThis property provides an a more concrete implementation of ServicePortArtifact, which means if a Target is\nidentified as an HTTP server, that Target will be referenced from both this property and the &quot;Service&quot; property\nbelow.\n"
  example: []
  syntax:
    content: public HttpServiceNode HttpService { get; set; }
    parameters: []
    return:
      type: SMACD.AppTree.HttpServiceNode
    content.vb: Public Property HttpService As HttpServiceNode
  overload: Synthesys.Plugins.Dummy.DummyAction.HttpService*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.Dummy.DummyAction.Service
  commentId: P:Synthesys.Plugins.Dummy.DummyAction.Service
  id: Service
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: DummyAction.Service
  fullName: Synthesys.Plugins.Dummy.DummyAction.Service
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Service
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 58
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nService acted upon by the ActionExtension, addressed via its port\nThis property will only be populated if the ActionExtension is queued with an open port (service) as a Target. If\nno compatible Targets were found, this will remain null.\nIf a more concrete implementation is not matched (for example, because the service was not fingerprinted), the\nproperty with the closest parent Type will be referenced.\n"
  example: []
  syntax:
    content: public ServiceNode Service { get; set; }
    parameters: []
    return:
      type: SMACD.AppTree.ServiceNode
    content.vb: Public Property Service As ServiceNode
  overload: Synthesys.Plugins.Dummy.DummyAction.Service*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.Dummy.DummyAction.Tasks
  commentId: P:Synthesys.Plugins.Dummy.DummyAction.Tasks
  id: Tasks
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: Tasks
  nameWithType: DummyAction.Tasks
  fullName: Synthesys.Plugins.Dummy.DummyAction.Tasks
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Tasks
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 63
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nLink to the Task toolbox, which can queue Tasks\n"
  example: []
  syntax:
    content: public ITaskToolbox Tasks { get; set; }
    parameters: []
    return:
      type: Synthesys.Tasks.ITaskToolbox
    content.vb: Public Property Tasks As ITaskToolbox
  overload: Synthesys.Plugins.Dummy.DummyAction.Tasks*
  implements:
  - Synthesys.Tasks.Attributes.ICanQueueTasks.Tasks
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.Dummy.DummyAction.Host
  commentId: P:Synthesys.Plugins.Dummy.DummyAction.Host
  id: Host
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: DummyAction.Host
  fullName: Synthesys.Plugins.Dummy.DummyAction.Host
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Host
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 70
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  summary: "\nHostname/IP acted upon by the ActionExtension\nThis property will only be populated if the ActionExtension is queued with a hostname as a Target. If no compatible\nTargets were found, this will remain null.\n"
  example: []
  syntax:
    content: public HostNode Host { get; set; }
    parameters: []
    return:
      type: SMACD.AppTree.HostNode
    content.vb: Public Property Host As HostNode
  overload: Synthesys.Plugins.Dummy.DummyAction.Host*
  implements:
  - Synthesys.SDK.Capabilities.IOperateOnHost.Host
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.Dummy.DummyAction.Act
  commentId: M:Synthesys.Plugins.Dummy.DummyAction.Act
  id: Act
  parent: Synthesys.Plugins.Dummy.DummyAction
  langs:
  - csharp
  - vb
  name: Act()
  nameWithType: DummyAction.Act()
  fullName: Synthesys.Plugins.Dummy.DummyAction.Act()
  type: Method
  source:
    remote:
      path: Synthesys.Plugins.Dummy/DummyAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Act
    path: ../Synthesys.Plugins.Dummy/DummyAction.cs
    startLine: 72
  assemblies:
  - Synthesys.Plugins.Dummy
  namespace: Synthesys.Plugins.Dummy
  syntax:
    content: public override ExtensionReport Act()
    return:
      type: Synthesys.SDK.ExtensionReport
    content.vb: Public Overrides Function Act As ExtensionReport
  overridden: Synthesys.SDK.Extensions.ActionExtension.Act
  overload: Synthesys.Plugins.Dummy.DummyAction.Act*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Synthesys.Plugins.Dummy
  commentId: N:Synthesys.Plugins.Dummy
  name: Synthesys.Plugins.Dummy
  nameWithType: Synthesys.Plugins.Dummy
  fullName: Synthesys.Plugins.Dummy
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Synthesys.SDK.Extensions.Extension
  commentId: T:Synthesys.SDK.Extensions.Extension
  parent: Synthesys.SDK.Extensions
  name: Extension
  nameWithType: Extension
  fullName: Synthesys.SDK.Extensions.Extension
- uid: Synthesys.SDK.Extensions.ActionExtension
  commentId: T:Synthesys.SDK.Extensions.ActionExtension
  parent: Synthesys.SDK.Extensions
  name: ActionExtension
  nameWithType: ActionExtension
  fullName: Synthesys.SDK.Extensions.ActionExtension
- uid: Synthesys.SDK.Capabilities.IOperateOnHost
  commentId: T:Synthesys.SDK.Capabilities.IOperateOnHost
  parent: Synthesys.SDK.Capabilities
  name: IOperateOnHost
  nameWithType: IOperateOnHost
  fullName: Synthesys.SDK.Capabilities.IOperateOnHost
- uid: Synthesys.Tasks.Attributes.ICanQueueTasks
  commentId: T:Synthesys.Tasks.Attributes.ICanQueueTasks
  parent: Synthesys.Tasks.Attributes
  name: ICanQueueTasks
  nameWithType: ICanQueueTasks
  fullName: Synthesys.Tasks.Attributes.ICanQueueTasks
- uid: Synthesys.SDK.Extensions.Extension.Logger
  commentId: P:Synthesys.SDK.Extensions.Extension.Logger
  parent: Synthesys.SDK.Extensions.Extension
  name: Logger
  nameWithType: Extension.Logger
  fullName: Synthesys.SDK.Extensions.Extension.Logger
- uid: Synthesys.SDK.Extensions.Extension.Initialize
  commentId: M:Synthesys.SDK.Extensions.Extension.Initialize
  parent: Synthesys.SDK.Extensions.Extension
  name: Initialize()
  nameWithType: Extension.Initialize()
  fullName: Synthesys.SDK.Extensions.Extension.Initialize()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.Initialize
    name: Initialize
    nameWithType: Extension.Initialize
    fullName: Synthesys.SDK.Extensions.Extension.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.Initialize
    name: Initialize
    nameWithType: Extension.Initialize
    fullName: Synthesys.SDK.Extensions.Extension.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  commentId: M:Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  parent: Synthesys.SDK.Extensions.Extension
  name: ValidateEnvironmentReadiness()
  nameWithType: Extension.ValidateEnvironmentReadiness()
  fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
    name: ValidateEnvironmentReadiness
    nameWithType: Extension.ValidateEnvironmentReadiness
    fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
    name: ValidateEnvironmentReadiness
    nameWithType: Extension.ValidateEnvironmentReadiness
    fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  commentId: M:Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  parent: Synthesys.SDK.Extensions.Extension
  isExternal: true
  name: SetLoggerName(String)
  nameWithType: Extension.SetLoggerName(String)
  fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
    name: SetLoggerName
    nameWithType: Extension.SetLoggerName
    fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
    name: SetLoggerName
    nameWithType: Extension.SetLoggerName
    fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.Metadata
  commentId: P:Synthesys.SDK.Extensions.Extension.Metadata
  parent: Synthesys.SDK.Extensions.Extension
  name: Metadata
  nameWithType: Extension.Metadata
  fullName: Synthesys.SDK.Extensions.Extension.Metadata
- uid: Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  commentId: P:Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  parent: Synthesys.SDK.Extensions.Extension
  name: ConfigurableProperties
  nameWithType: Extension.ConfigurableProperties
  fullName: Synthesys.SDK.Extensions.Extension.ConfigurableProperties
- uid: Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  commentId: P:Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  parent: Synthesys.SDK.Extensions.Extension
  name: ConfigurablePropertyValues
  nameWithType: Extension.ConfigurablePropertyValues
  fullName: Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Synthesys.Tasks.ExtensionConfigurator
  definition: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Configure(AppTreeNode, Dictionary<String, String>)
  nameWithType: ExtensionConfigurator.Configure(AppTreeNode, Dictionary<String, String>)
  fullName: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: ExtensionConfigurator.Configure(AppTreeNode, Dictionary(Of String, String))
  fullName.vb: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Configure(AppTreeNode, Dictionary(Of String, String))
  spec.csharp:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.SDK.Extensions
  commentId: N:Synthesys.SDK.Extensions
  name: Synthesys.SDK.Extensions
  nameWithType: Synthesys.SDK.Extensions
  fullName: Synthesys.SDK.Extensions
- uid: Synthesys.SDK.Capabilities
  commentId: N:Synthesys.SDK.Capabilities
  name: Synthesys.SDK.Capabilities
  nameWithType: Synthesys.SDK.Capabilities
  fullName: Synthesys.SDK.Capabilities
- uid: Synthesys.Tasks.Attributes
  commentId: N:Synthesys.Tasks.Attributes
  name: Synthesys.Tasks.Attributes
  nameWithType: Synthesys.Tasks.Attributes
  fullName: Synthesys.Tasks.Attributes
- uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Configure(Extension, AppTreeNode, Dictionary<String, String>)
  nameWithType: ExtensionConfigurator.Configure(Extension, AppTreeNode, Dictionary<String, String>)
  fullName: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: ExtensionConfigurator.Configure(Extension, AppTreeNode, Dictionary(Of String, String))
  fullName.vb: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Configure(Extension, AppTreeNode, Dictionary(Of String, String))
  spec.csharp:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Extensions.Extension
    name: Extension
    nameWithType: Extension
    fullName: Synthesys.SDK.Extensions.Extension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Extensions.Extension
    name: Extension
    nameWithType: Extension
    fullName: Synthesys.SDK.Extensions.Extension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Tasks.ExtensionConfigurator
  commentId: T:Synthesys.Tasks.ExtensionConfigurator
  parent: Synthesys.Tasks
  name: ExtensionConfigurator
  nameWithType: ExtensionConfigurator
  fullName: Synthesys.Tasks.ExtensionConfigurator
- uid: Synthesys.Tasks
  commentId: N:Synthesys.Tasks
  name: Synthesys.Tasks
  nameWithType: Synthesys.Tasks
  fullName: Synthesys.Tasks
- uid: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption
  name: ConfigurationOption
  nameWithType: DummyAction.ConfigurationOption
  fullName: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2
  name: ConfigurationOption2
  nameWithType: DummyAction.ConfigurationOption2
  fullName: Synthesys.Plugins.Dummy.DummyAction.ConfigurationOption2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Synthesys.Plugins.Dummy.DummyAction.HttpService*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.HttpService
  name: HttpService
  nameWithType: DummyAction.HttpService
  fullName: Synthesys.Plugins.Dummy.DummyAction.HttpService
- uid: SMACD.AppTree.HttpServiceNode
  commentId: T:SMACD.AppTree.HttpServiceNode
  parent: SMACD.AppTree
  name: HttpServiceNode
  nameWithType: HttpServiceNode
  fullName: SMACD.AppTree.HttpServiceNode
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
- uid: Synthesys.Plugins.Dummy.DummyAction.Service*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.Service
  name: Service
  nameWithType: DummyAction.Service
  fullName: Synthesys.Plugins.Dummy.DummyAction.Service
- uid: SMACD.AppTree.ServiceNode
  commentId: T:SMACD.AppTree.ServiceNode
  parent: SMACD.AppTree
  name: ServiceNode
  nameWithType: ServiceNode
  fullName: SMACD.AppTree.ServiceNode
- uid: Synthesys.Plugins.Dummy.DummyAction.Tasks*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.Tasks
  name: Tasks
  nameWithType: DummyAction.Tasks
  fullName: Synthesys.Plugins.Dummy.DummyAction.Tasks
- uid: Synthesys.Tasks.Attributes.ICanQueueTasks.Tasks
  commentId: P:Synthesys.Tasks.Attributes.ICanQueueTasks.Tasks
  parent: Synthesys.Tasks.Attributes.ICanQueueTasks
  name: Tasks
  nameWithType: ICanQueueTasks.Tasks
  fullName: Synthesys.Tasks.Attributes.ICanQueueTasks.Tasks
- uid: Synthesys.Tasks.ITaskToolbox
  commentId: T:Synthesys.Tasks.ITaskToolbox
  parent: Synthesys.Tasks
  name: ITaskToolbox
  nameWithType: ITaskToolbox
  fullName: Synthesys.Tasks.ITaskToolbox
- uid: Synthesys.Plugins.Dummy.DummyAction.Host*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.Host
  name: Host
  nameWithType: DummyAction.Host
  fullName: Synthesys.Plugins.Dummy.DummyAction.Host
- uid: Synthesys.SDK.Capabilities.IOperateOnHost.Host
  commentId: P:Synthesys.SDK.Capabilities.IOperateOnHost.Host
  parent: Synthesys.SDK.Capabilities.IOperateOnHost
  name: Host
  nameWithType: IOperateOnHost.Host
  fullName: Synthesys.SDK.Capabilities.IOperateOnHost.Host
- uid: SMACD.AppTree.HostNode
  commentId: T:SMACD.AppTree.HostNode
  parent: SMACD.AppTree
  name: HostNode
  nameWithType: HostNode
  fullName: SMACD.AppTree.HostNode
- uid: Synthesys.SDK.Extensions.ActionExtension.Act
  commentId: M:Synthesys.SDK.Extensions.ActionExtension.Act
  parent: Synthesys.SDK.Extensions.ActionExtension
  name: Act()
  nameWithType: ActionExtension.Act()
  fullName: Synthesys.SDK.Extensions.ActionExtension.Act()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.ActionExtension.Act
    name: Act
    nameWithType: ActionExtension.Act
    fullName: Synthesys.SDK.Extensions.ActionExtension.Act
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.ActionExtension.Act
    name: Act
    nameWithType: ActionExtension.Act
    fullName: Synthesys.SDK.Extensions.ActionExtension.Act
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Plugins.Dummy.DummyAction.Act*
  commentId: Overload:Synthesys.Plugins.Dummy.DummyAction.Act
  name: Act
  nameWithType: DummyAction.Act
  fullName: Synthesys.Plugins.Dummy.DummyAction.Act
- uid: Synthesys.SDK.ExtensionReport
  commentId: T:Synthesys.SDK.ExtensionReport
  parent: Synthesys.SDK
  name: ExtensionReport
  nameWithType: ExtensionReport
  fullName: Synthesys.SDK.ExtensionReport
- uid: Synthesys.SDK
  commentId: N:Synthesys.SDK
  name: Synthesys.SDK
  nameWithType: Synthesys.SDK
  fullName: Synthesys.SDK
