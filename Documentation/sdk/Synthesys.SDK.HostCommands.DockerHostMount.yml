### YamlMime:ManagedReference
items:
- uid: Synthesys.SDK.HostCommands.DockerHostMount
  commentId: T:Synthesys.SDK.HostCommands.DockerHostMount
  id: DockerHostMount
  parent: Synthesys.SDK.HostCommands
  children:
  - Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath
  - Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly
  - Synthesys.SDK.HostCommands.DockerHostMount.LocalPath
  langs:
  - csharp
  - vb
  name: DockerHostMount
  nameWithType: DockerHostMount
  fullName: Synthesys.SDK.HostCommands.DockerHostMount
  type: Class
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: DockerHostMount
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 39
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a mount between the host and a Docker container\n"
  example: []
  syntax:
    content: public class DockerHostMount
    content.vb: Public Class DockerHostMount
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.SDK.HostCommands.DockerHostMount.LocalPath
  commentId: P:Synthesys.SDK.HostCommands.DockerHostMount.LocalPath
  id: LocalPath
  parent: Synthesys.SDK.HostCommands.DockerHostMount
  langs:
  - csharp
  - vb
  name: LocalPath
  nameWithType: DockerHostMount.LocalPath
  fullName: Synthesys.SDK.HostCommands.DockerHostMount.LocalPath
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: LocalPath
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 44
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nPath on host\n"
  example: []
  syntax:
    content: public string LocalPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocalPath As String
  overload: Synthesys.SDK.HostCommands.DockerHostMount.LocalPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath
  commentId: P:Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath
  id: ContainerPath
  parent: Synthesys.SDK.HostCommands.DockerHostMount
  langs:
  - csharp
  - vb
  name: ContainerPath
  nameWithType: DockerHostMount.ContainerPath
  fullName: Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ContainerPath
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 49
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nPath inside container\n"
  example: []
  syntax:
    content: public string ContainerPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContainerPath As String
  overload: Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly
  commentId: P:Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly
  id: IsReadOnly
  parent: Synthesys.SDK.HostCommands.DockerHostMount
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: DockerHostMount.IsReadOnly
  fullName: Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: IsReadOnly
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 54
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nIf the mount is read-only\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsReadOnly As Boolean
  overload: Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Synthesys.SDK.HostCommands
  commentId: N:Synthesys.SDK.HostCommands
  name: Synthesys.SDK.HostCommands
  nameWithType: Synthesys.SDK.HostCommands
  fullName: Synthesys.SDK.HostCommands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.SDK.HostCommands.DockerHostMount.LocalPath*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostMount.LocalPath
  name: LocalPath
  nameWithType: DockerHostMount.LocalPath
  fullName: Synthesys.SDK.HostCommands.DockerHostMount.LocalPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath
  name: ContainerPath
  nameWithType: DockerHostMount.ContainerPath
  fullName: Synthesys.SDK.HostCommands.DockerHostMount.ContainerPath
- uid: Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly
  name: IsReadOnly
  nameWithType: DockerHostMount.IsReadOnly
  fullName: Synthesys.SDK.HostCommands.DockerHostMount.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
