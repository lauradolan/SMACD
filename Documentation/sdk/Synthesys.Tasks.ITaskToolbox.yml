### YamlMime:ManagedReference
items:
- uid: Synthesys.Tasks.ITaskToolbox
  commentId: T:Synthesys.Tasks.ITaskToolbox
  id: ITaskToolbox
  parent: Synthesys.Tasks
  children:
  - Synthesys.Tasks.ITaskToolbox.Count
  - Synthesys.Tasks.ITaskToolbox.Enqueue(System.String,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String},SMACD.AppTree.ProjectPointer)
  - Synthesys.Tasks.ITaskToolbox.IsRunning
  - Synthesys.Tasks.ITaskToolbox.TaskCompleted
  - Synthesys.Tasks.ITaskToolbox.TaskFaulted
  - Synthesys.Tasks.ITaskToolbox.TaskStarted
  langs:
  - csharp
  - vb
  name: ITaskToolbox
  nameWithType: ITaskToolbox
  fullName: Synthesys.Tasks.ITaskToolbox
  type: Interface
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ITaskToolbox
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 8
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  syntax:
    content: public interface ITaskToolbox
    content.vb: Public Interface ITaskToolbox
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Synthesys.Tasks.ITaskToolbox.IsRunning
  commentId: P:Synthesys.Tasks.ITaskToolbox.IsRunning
  id: IsRunning
  parent: Synthesys.Tasks.ITaskToolbox
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: ITaskToolbox.IsRunning
  fullName: Synthesys.Tasks.ITaskToolbox.IsRunning
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: IsRunning
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 13
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nIf the Task queue is running\n"
  example: []
  syntax:
    content: bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsRunning As Boolean
  overload: Synthesys.Tasks.ITaskToolbox.IsRunning*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Synthesys.Tasks.ITaskToolbox.Count
  commentId: P:Synthesys.Tasks.ITaskToolbox.Count
  id: Count
  parent: Synthesys.Tasks.ITaskToolbox
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ITaskToolbox.Count
  fullName: Synthesys.Tasks.ITaskToolbox.Count
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Count
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 18
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nNumber of queued and running Tasks\n"
  example: []
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Count As Integer
  overload: Synthesys.Tasks.ITaskToolbox.Count*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Synthesys.Tasks.ITaskToolbox.TaskCompleted
  commentId: E:Synthesys.Tasks.ITaskToolbox.TaskCompleted
  id: TaskCompleted
  parent: Synthesys.Tasks.ITaskToolbox
  langs:
  - csharp
  - vb
  name: TaskCompleted
  nameWithType: ITaskToolbox.TaskCompleted
  fullName: Synthesys.Tasks.ITaskToolbox.TaskCompleted
  type: Event
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: TaskCompleted
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 23
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nFired when Task is completed\n"
  example: []
  syntax:
    content: event EventHandler<RuntimeTaskDescriptor> TaskCompleted
    return:
      type: System.EventHandler{Synthesys.Tasks.RuntimeTaskDescriptor}
    content.vb: Event TaskCompleted As EventHandler(Of RuntimeTaskDescriptor)
- uid: Synthesys.Tasks.ITaskToolbox.TaskFaulted
  commentId: E:Synthesys.Tasks.ITaskToolbox.TaskFaulted
  id: TaskFaulted
  parent: Synthesys.Tasks.ITaskToolbox
  langs:
  - csharp
  - vb
  name: TaskFaulted
  nameWithType: ITaskToolbox.TaskFaulted
  fullName: Synthesys.Tasks.ITaskToolbox.TaskFaulted
  type: Event
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: TaskFaulted
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 28
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nFired when Task is faulted (errored)\n"
  example: []
  syntax:
    content: event EventHandler<RuntimeTaskDescriptor> TaskFaulted
    return:
      type: System.EventHandler{Synthesys.Tasks.RuntimeTaskDescriptor}
    content.vb: Event TaskFaulted As EventHandler(Of RuntimeTaskDescriptor)
- uid: Synthesys.Tasks.ITaskToolbox.TaskStarted
  commentId: E:Synthesys.Tasks.ITaskToolbox.TaskStarted
  id: TaskStarted
  parent: Synthesys.Tasks.ITaskToolbox
  langs:
  - csharp
  - vb
  name: TaskStarted
  nameWithType: ITaskToolbox.TaskStarted
  fullName: Synthesys.Tasks.ITaskToolbox.TaskStarted
  type: Event
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: TaskStarted
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 33
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nFired when Task is started\n"
  example: []
  syntax:
    content: event EventHandler<RuntimeTaskDescriptor> TaskStarted
    return:
      type: System.EventHandler{Synthesys.Tasks.RuntimeTaskDescriptor}
    content.vb: Event TaskStarted As EventHandler(Of RuntimeTaskDescriptor)
- uid: Synthesys.Tasks.ITaskToolbox.Enqueue(System.String,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String},SMACD.AppTree.ProjectPointer)
  commentId: M:Synthesys.Tasks.ITaskToolbox.Enqueue(System.String,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String},SMACD.AppTree.ProjectPointer)
  id: Enqueue(System.String,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String},SMACD.AppTree.ProjectPointer)
  parent: Synthesys.Tasks.ITaskToolbox
  langs:
  - csharp
  - vb
  name: Enqueue(String, AppTreeNode, Dictionary<String, String>, ProjectPointer)
  nameWithType: ITaskToolbox.Enqueue(String, AppTreeNode, Dictionary<String, String>, ProjectPointer)
  fullName: Synthesys.Tasks.ITaskToolbox.Enqueue(System.String, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>, SMACD.AppTree.ProjectPointer)
  type: Method
  source:
    remote:
      path: Synthesys.Tasks/ITaskToolbox.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Enqueue
    path: ../Synthesys.Tasks/ITaskToolbox.cs
    startLine: 43
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  summary: "\nEnqueue a new Task\n"
  example: []
  syntax:
    content: Task<List<ExtensionReport>> Enqueue(string actionIdentifier, AppTreeNode rootArtifact, Dictionary<string, string> options, ProjectPointer serviceMapItemPtr = null)
    parameters:
    - id: actionIdentifier
      type: System.String
      description: ActionExtension identifier
    - id: rootArtifact
      type: SMACD.AppTree.AppTreeNode
      description: AppTreeNode to be used as the root of the Action
    - id: options
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: ActionExtension options
    - id: serviceMapItemPtr
      type: SMACD.AppTree.ProjectPointer
      description: Pointer to element in Service Map queuing this Action
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}}
      description: ''
    content.vb: Function Enqueue(actionIdentifier As String, rootArtifact As AppTreeNode, options As Dictionary(Of String, String), serviceMapItemPtr As ProjectPointer = Nothing) As Task(Of List(Of ExtensionReport))
  overload: Synthesys.Tasks.ITaskToolbox.Enqueue*
  nameWithType.vb: ITaskToolbox.Enqueue(String, AppTreeNode, Dictionary(Of String, String), ProjectPointer)
  fullName.vb: Synthesys.Tasks.ITaskToolbox.Enqueue(System.String, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String), SMACD.AppTree.ProjectPointer)
  name.vb: Enqueue(String, AppTreeNode, Dictionary(Of String, String), ProjectPointer)
references:
- uid: Synthesys.Tasks
  commentId: N:Synthesys.Tasks
  name: Synthesys.Tasks
  nameWithType: Synthesys.Tasks
  fullName: Synthesys.Tasks
- uid: Synthesys.Tasks.ITaskToolbox.IsRunning*
  commentId: Overload:Synthesys.Tasks.ITaskToolbox.IsRunning
  name: IsRunning
  nameWithType: ITaskToolbox.IsRunning
  fullName: Synthesys.Tasks.ITaskToolbox.IsRunning
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.Tasks.ITaskToolbox.Count*
  commentId: Overload:Synthesys.Tasks.ITaskToolbox.Count
  name: Count
  nameWithType: ITaskToolbox.Count
  fullName: Synthesys.Tasks.ITaskToolbox.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EventHandler{Synthesys.Tasks.RuntimeTaskDescriptor}
  commentId: T:System.EventHandler{Synthesys.Tasks.RuntimeTaskDescriptor}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<RuntimeTaskDescriptor>
  nameWithType: EventHandler<RuntimeTaskDescriptor>
  fullName: System.EventHandler<Synthesys.Tasks.RuntimeTaskDescriptor>
  nameWithType.vb: EventHandler(Of RuntimeTaskDescriptor)
  fullName.vb: System.EventHandler(Of Synthesys.Tasks.RuntimeTaskDescriptor)
  name.vb: EventHandler(Of RuntimeTaskDescriptor)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Synthesys.Tasks.RuntimeTaskDescriptor
    name: RuntimeTaskDescriptor
    nameWithType: RuntimeTaskDescriptor
    fullName: Synthesys.Tasks.RuntimeTaskDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Synthesys.Tasks.RuntimeTaskDescriptor
    name: RuntimeTaskDescriptor
    nameWithType: RuntimeTaskDescriptor
    fullName: Synthesys.Tasks.RuntimeTaskDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Tasks.ITaskToolbox.Enqueue*
  commentId: Overload:Synthesys.Tasks.ITaskToolbox.Enqueue
  name: Enqueue
  nameWithType: ITaskToolbox.Enqueue
  fullName: Synthesys.Tasks.ITaskToolbox.Enqueue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SMACD.AppTree.AppTreeNode
  commentId: T:SMACD.AppTree.AppTreeNode
  parent: SMACD.AppTree
  name: AppTreeNode
  nameWithType: AppTreeNode
  fullName: SMACD.AppTree.AppTreeNode
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.ProjectPointer
  commentId: T:SMACD.AppTree.ProjectPointer
  parent: SMACD.AppTree
  name: ProjectPointer
  nameWithType: ProjectPointer
  fullName: SMACD.AppTree.ProjectPointer
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ExtensionReport>>
  nameWithType: Task<List<ExtensionReport>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Synthesys.SDK.ExtensionReport>>
  nameWithType.vb: Task(Of List(Of ExtensionReport))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Synthesys.SDK.ExtensionReport))
  name.vb: Task(Of List(Of ExtensionReport))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Synthesys.SDK.ExtensionReport
    name: ExtensionReport
    nameWithType: ExtensionReport
    fullName: Synthesys.SDK.ExtensionReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Synthesys.SDK.ExtensionReport
    name: ExtensionReport
    nameWithType: ExtensionReport
    fullName: Synthesys.SDK.ExtensionReport
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
