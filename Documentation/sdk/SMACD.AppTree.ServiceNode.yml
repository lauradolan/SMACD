### YamlMime:ManagedReference
items:
- uid: SMACD.AppTree.ServiceNode
  commentId: T:SMACD.AppTree.ServiceNode
  id: ServiceNode
  parent: SMACD.AppTree
  children:
  - SMACD.AppTree.ServiceNode.Detail
  - SMACD.AppTree.ServiceNode.Host
  - SMACD.AppTree.ServiceNode.NodeViewName
  - SMACD.AppTree.ServiceNode.Port
  - SMACD.AppTree.ServiceNode.Protocol
  - SMACD.AppTree.ServiceNode.ServiceNodeType
  - SMACD.AppTree.ServiceNode.ToString
  langs:
  - csharp
  - vb
  name: ServiceNode
  nameWithType: ServiceNode
  fullName: SMACD.AppTree.ServiceNode
  type: Class
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ServiceNode
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 10
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nRepresents a single service, listening on a port of a Host\n"
  example: []
  syntax:
    content: 'public class ServiceNode : AppTreeNode, IAppTreeNode<ServiceDetails>'
    content.vb: >-
      Public Class ServiceNode

          Inherits AppTreeNode

          Implements IAppTreeNode(Of ServiceDetails)
  inheritance:
  - System.Object
  - SMACD.AppTree.AppTreeNode
  derivedClasses:
  - SMACD.AppTree.HttpServiceNode
  implements:
  - SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}
  inheritedMembers:
  - SMACD.AppTree.AppTreeNode.Root
  - SMACD.AppTree.AppTreeNode.Parent
  - SMACD.AppTree.AppTreeNode.Children
  - SMACD.AppTree.AppTreeNode.ChildrenAre``1
  - SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{{TChild}})
  - SMACD.AppTree.AppTreeNode.Identifiers
  - SMACD.AppTree.AppTreeNode.NiceIdentifier
  - SMACD.AppTree.AppTreeNode.UUID
  - SMACD.AppTree.AppTreeNode.Evidence
  - SMACD.AppTree.AppTreeNode.Vulnerabilities
  - SMACD.AppTree.AppTreeNode.Item(System.Guid)
  - SMACD.AppTree.AppTreeNode.Connect(SMACD.AppTree.AppTreeNode)
  - SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath(System.String)
  - SMACD.AppTree.AppTreeNode.GetPath(System.Func{SMACD.AppTree.AppTreeNode,System.String})
  - SMACD.AppTree.AppTreeNode.GetDisplayPath
  - SMACD.AppTree.AppTreeNode.GetUUIDPath
  - SMACD.AppTree.AppTreeNode.GetPath
  - SMACD.AppTree.AppTreeNode.IsDescribedByPath(System.String)
  - SMACD.AppTree.AppTreeNode.NotifyChanged
  - SMACD.AppTree.AppTreeNode.NotifyChildAdded(SMACD.AppTree.AppTreeNode)
  - SMACD.AppTree.AppTreeNode.NotifyCreated
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SMACD.AppTree.ServiceNode.NodeViewName
  commentId: P:SMACD.AppTree.ServiceNode.NodeViewName
  id: NodeViewName
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: NodeViewName
  nameWithType: ServiceNode.NodeViewName
  fullName: SMACD.AppTree.ServiceNode.NodeViewName
  type: Property
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: NodeViewName
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 31
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nA Razor component view which can be used to visualize the content of a given node\n"
  example: []
  syntax:
    content: public override string NodeViewName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property NodeViewName As String
  overridden: SMACD.AppTree.AppTreeNode.NodeViewName
  overload: SMACD.AppTree.ServiceNode.NodeViewName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SMACD.AppTree.ServiceNode.Host
  commentId: P:SMACD.AppTree.ServiceNode.Host
  id: Host
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ServiceNode.Host
  fullName: SMACD.AppTree.ServiceNode.Host
  type: Property
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Host
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 36
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nHostname/IP of this Service\n"
  example: []
  syntax:
    content: public HostNode Host { get; }
    parameters: []
    return:
      type: SMACD.AppTree.HostNode
    content.vb: Public ReadOnly Property Host As HostNode
  overload: SMACD.AppTree.ServiceNode.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SMACD.AppTree.ServiceNode.ServiceNodeType
  commentId: P:SMACD.AppTree.ServiceNode.ServiceNodeType
  id: ServiceNodeType
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: ServiceNodeType
  nameWithType: ServiceNode.ServiceNodeType
  fullName: SMACD.AppTree.ServiceNode.ServiceNodeType
  type: Property
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ServiceNodeType
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 41
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nSpecific type of the service node for more information\n"
  example: []
  syntax:
    content: public ServiceNode.KnownServiceNodeTypes ServiceNodeType { get; }
    parameters: []
    return:
      type: SMACD.AppTree.ServiceNode.KnownServiceNodeTypes
    content.vb: Public ReadOnly Property ServiceNodeType As ServiceNode.KnownServiceNodeTypes
  overload: SMACD.AppTree.ServiceNode.ServiceNodeType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SMACD.AppTree.ServiceNode.Protocol
  commentId: P:SMACD.AppTree.ServiceNode.Protocol
  id: Protocol
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: ServiceNode.Protocol
  fullName: SMACD.AppTree.ServiceNode.Protocol
  type: Property
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Protocol
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 57
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nPort Protocol Type\n"
  example: []
  syntax:
    content: public ProtocolType Protocol { get; }
    parameters: []
    return:
      type: System.Net.Sockets.ProtocolType
    content.vb: Public ReadOnly Property Protocol As ProtocolType
  overload: SMACD.AppTree.ServiceNode.Protocol*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SMACD.AppTree.ServiceNode.Port
  commentId: P:SMACD.AppTree.ServiceNode.Port
  id: Port
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ServiceNode.Port
  fullName: SMACD.AppTree.ServiceNode.Port
  type: Property
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Port
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 78
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nPort number\n"
  example: []
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: SMACD.AppTree.ServiceNode.Port*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SMACD.AppTree.ServiceNode.Detail
  commentId: P:SMACD.AppTree.ServiceNode.Detail
  id: Detail
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: Detail
  nameWithType: ServiceNode.Detail
  fullName: SMACD.AppTree.ServiceNode.Detail
  type: Property
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Detail
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 99
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nDetails around a Service\n"
  example: []
  syntax:
    content: public Versionable<ServiceDetails> Detail { get; set; }
    parameters: []
    return:
      type: SMACD.AppTree.Versionable{SMACD.AppTree.Details.ServiceDetails}
    content.vb: Public Property Detail As Versionable(Of ServiceDetails)
  overload: SMACD.AppTree.ServiceNode.Detail*
  implements:
  - SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}.Detail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.AppTree.ServiceNode.ToString
  commentId: M:SMACD.AppTree.ServiceNode.ToString
  id: ToString
  parent: SMACD.AppTree.ServiceNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceNode.ToString()
  fullName: SMACD.AppTree.ServiceNode.ToString()
  type: Method
  source:
    remote:
      path: SMACD.AppTree/ServiceNode.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ToString
    path: ../SMACD.AppTree/ServiceNode.cs
    startLine: 106
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree
  summary: "\nString representation of Service Port Artifact\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SMACD.AppTree.ServiceNode.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SMACD.AppTree.AppTreeNode
  commentId: T:SMACD.AppTree.AppTreeNode
  parent: SMACD.AppTree
  name: AppTreeNode
  nameWithType: AppTreeNode
  fullName: SMACD.AppTree.AppTreeNode
- uid: SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}
  commentId: T:SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}
  parent: SMACD.AppTree
  definition: SMACD.AppTree.IAppTreeNode`1
  name: IAppTreeNode<ServiceDetails>
  nameWithType: IAppTreeNode<ServiceDetails>
  fullName: SMACD.AppTree.IAppTreeNode<SMACD.AppTree.Details.ServiceDetails>
  nameWithType.vb: IAppTreeNode(Of ServiceDetails)
  fullName.vb: SMACD.AppTree.IAppTreeNode(Of SMACD.AppTree.Details.ServiceDetails)
  name.vb: IAppTreeNode(Of ServiceDetails)
  spec.csharp:
  - uid: SMACD.AppTree.IAppTreeNode`1
    name: IAppTreeNode
    nameWithType: IAppTreeNode
    fullName: SMACD.AppTree.IAppTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - uid: SMACD.AppTree.Details.ServiceDetails
    name: ServiceDetails
    nameWithType: ServiceDetails
    fullName: SMACD.AppTree.Details.ServiceDetails
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SMACD.AppTree.IAppTreeNode`1
    name: IAppTreeNode
    nameWithType: IAppTreeNode
    fullName: SMACD.AppTree.IAppTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SMACD.AppTree.Details.ServiceDetails
    name: ServiceDetails
    nameWithType: ServiceDetails
    fullName: SMACD.AppTree.Details.ServiceDetails
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.Root
  commentId: P:SMACD.AppTree.AppTreeNode.Root
  parent: SMACD.AppTree.AppTreeNode
  name: Root
  nameWithType: AppTreeNode.Root
  fullName: SMACD.AppTree.AppTreeNode.Root
- uid: SMACD.AppTree.AppTreeNode.Parent
  commentId: P:SMACD.AppTree.AppTreeNode.Parent
  parent: SMACD.AppTree.AppTreeNode
  name: Parent
  nameWithType: AppTreeNode.Parent
  fullName: SMACD.AppTree.AppTreeNode.Parent
- uid: SMACD.AppTree.AppTreeNode.Children
  commentId: P:SMACD.AppTree.AppTreeNode.Children
  parent: SMACD.AppTree.AppTreeNode
  name: Children
  nameWithType: AppTreeNode.Children
  fullName: SMACD.AppTree.AppTreeNode.Children
- uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1
  commentId: M:SMACD.AppTree.AppTreeNode.ChildrenAre``1
  parent: SMACD.AppTree.AppTreeNode
  name: ChildrenAre<TChild>()
  nameWithType: AppTreeNode.ChildrenAre<TChild>()
  fullName: SMACD.AppTree.AppTreeNode.ChildrenAre<TChild>()
  nameWithType.vb: AppTreeNode.ChildrenAre(Of TChild)()
  fullName.vb: SMACD.AppTree.AppTreeNode.ChildrenAre(Of TChild)()
  name.vb: ChildrenAre(Of TChild)()
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1
    name: ChildrenAre<TChild>
    nameWithType: AppTreeNode.ChildrenAre<TChild>
    fullName: SMACD.AppTree.AppTreeNode.ChildrenAre<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1
    name: ChildrenAre(Of TChild)
    nameWithType: AppTreeNode.ChildrenAre(Of TChild)
    fullName: SMACD.AppTree.AppTreeNode.ChildrenAre(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{{TChild}})
  commentId: M:SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
  parent: SMACD.AppTree.AppTreeNode
  definition: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
  name: ChildrenAre<TChild>(Predicate<TChild>)
  nameWithType: AppTreeNode.ChildrenAre<TChild>(Predicate<TChild>)
  fullName: SMACD.AppTree.AppTreeNode.ChildrenAre<TChild>(System.Predicate<TChild>)
  nameWithType.vb: AppTreeNode.ChildrenAre(Of TChild)(Predicate(Of TChild))
  fullName.vb: SMACD.AppTree.AppTreeNode.ChildrenAre(Of TChild)(System.Predicate(Of TChild))
  name.vb: ChildrenAre(Of TChild)(Predicate(Of TChild))
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
    name: ChildrenAre<TChild>
    nameWithType: AppTreeNode.ChildrenAre<TChild>
    fullName: SMACD.AppTree.AppTreeNode.ChildrenAre<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
    name: ChildrenAre(Of TChild)
    nameWithType: AppTreeNode.ChildrenAre(Of TChild)
    fullName: SMACD.AppTree.AppTreeNode.ChildrenAre(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.Identifiers
  commentId: P:SMACD.AppTree.AppTreeNode.Identifiers
  parent: SMACD.AppTree.AppTreeNode
  name: Identifiers
  nameWithType: AppTreeNode.Identifiers
  fullName: SMACD.AppTree.AppTreeNode.Identifiers
- uid: SMACD.AppTree.AppTreeNode.NiceIdentifier
  commentId: P:SMACD.AppTree.AppTreeNode.NiceIdentifier
  parent: SMACD.AppTree.AppTreeNode
  name: NiceIdentifier
  nameWithType: AppTreeNode.NiceIdentifier
  fullName: SMACD.AppTree.AppTreeNode.NiceIdentifier
- uid: SMACD.AppTree.AppTreeNode.UUID
  commentId: P:SMACD.AppTree.AppTreeNode.UUID
  parent: SMACD.AppTree.AppTreeNode
  name: UUID
  nameWithType: AppTreeNode.UUID
  fullName: SMACD.AppTree.AppTreeNode.UUID
- uid: SMACD.AppTree.AppTreeNode.Evidence
  commentId: P:SMACD.AppTree.AppTreeNode.Evidence
  parent: SMACD.AppTree.AppTreeNode
  name: Evidence
  nameWithType: AppTreeNode.Evidence
  fullName: SMACD.AppTree.AppTreeNode.Evidence
- uid: SMACD.AppTree.AppTreeNode.Vulnerabilities
  commentId: P:SMACD.AppTree.AppTreeNode.Vulnerabilities
  parent: SMACD.AppTree.AppTreeNode
  name: Vulnerabilities
  nameWithType: AppTreeNode.Vulnerabilities
  fullName: SMACD.AppTree.AppTreeNode.Vulnerabilities
- uid: SMACD.AppTree.AppTreeNode.Item(System.Guid)
  commentId: P:SMACD.AppTree.AppTreeNode.Item(System.Guid)
  parent: SMACD.AppTree.AppTreeNode
  isExternal: true
  name: Item[Guid]
  nameWithType: AppTreeNode.Item[Guid]
  fullName: SMACD.AppTree.AppTreeNode.Item[System.Guid]
  nameWithType.vb: AppTreeNode.Item(Guid)
  fullName.vb: SMACD.AppTree.AppTreeNode.Item(System.Guid)
  name.vb: Item(Guid)
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.Item(System.Guid)
    name: Item
    nameWithType: AppTreeNode.Item
    fullName: SMACD.AppTree.AppTreeNode.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.Item(System.Guid)
    name: Item
    nameWithType: AppTreeNode.Item
    fullName: SMACD.AppTree.AppTreeNode.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.Connect(SMACD.AppTree.AppTreeNode)
  commentId: M:SMACD.AppTree.AppTreeNode.Connect(SMACD.AppTree.AppTreeNode)
  parent: SMACD.AppTree.AppTreeNode
  name: Connect(AppTreeNode)
  nameWithType: AppTreeNode.Connect(AppTreeNode)
  fullName: SMACD.AppTree.AppTreeNode.Connect(SMACD.AppTree.AppTreeNode)
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.Connect(SMACD.AppTree.AppTreeNode)
    name: Connect
    nameWithType: AppTreeNode.Connect
    fullName: SMACD.AppTree.AppTreeNode.Connect
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.Connect(SMACD.AppTree.AppTreeNode)
    name: Connect
    nameWithType: AppTreeNode.Connect
    fullName: SMACD.AppTree.AppTreeNode.Connect
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath(System.String)
  commentId: M:SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath(System.String)
  parent: SMACD.AppTree.AppTreeNode
  isExternal: true
  name: GetNodeByRelativeUUIDPath(String)
  nameWithType: AppTreeNode.GetNodeByRelativeUUIDPath(String)
  fullName: SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath(System.String)
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath(System.String)
    name: GetNodeByRelativeUUIDPath
    nameWithType: AppTreeNode.GetNodeByRelativeUUIDPath
    fullName: SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath(System.String)
    name: GetNodeByRelativeUUIDPath
    nameWithType: AppTreeNode.GetNodeByRelativeUUIDPath
    fullName: SMACD.AppTree.AppTreeNode.GetNodeByRelativeUUIDPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.GetPath(System.Func{SMACD.AppTree.AppTreeNode,System.String})
  commentId: M:SMACD.AppTree.AppTreeNode.GetPath(System.Func{SMACD.AppTree.AppTreeNode,System.String})
  parent: SMACD.AppTree.AppTreeNode
  isExternal: true
  name: GetPath(Func<AppTreeNode, String>)
  nameWithType: AppTreeNode.GetPath(Func<AppTreeNode, String>)
  fullName: SMACD.AppTree.AppTreeNode.GetPath(System.Func<SMACD.AppTree.AppTreeNode, System.String>)
  nameWithType.vb: AppTreeNode.GetPath(Func(Of AppTreeNode, String))
  fullName.vb: SMACD.AppTree.AppTreeNode.GetPath(System.Func(Of SMACD.AppTree.AppTreeNode, System.String))
  name.vb: GetPath(Func(Of AppTreeNode, String))
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.GetPath(System.Func{SMACD.AppTree.AppTreeNode,System.String})
    name: GetPath
    nameWithType: AppTreeNode.GetPath
    fullName: SMACD.AppTree.AppTreeNode.GetPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.GetPath(System.Func{SMACD.AppTree.AppTreeNode,System.String})
    name: GetPath
    nameWithType: AppTreeNode.GetPath
    fullName: SMACD.AppTree.AppTreeNode.GetPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.GetDisplayPath
  commentId: M:SMACD.AppTree.AppTreeNode.GetDisplayPath
  parent: SMACD.AppTree.AppTreeNode
  name: GetDisplayPath()
  nameWithType: AppTreeNode.GetDisplayPath()
  fullName: SMACD.AppTree.AppTreeNode.GetDisplayPath()
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.GetDisplayPath
    name: GetDisplayPath
    nameWithType: AppTreeNode.GetDisplayPath
    fullName: SMACD.AppTree.AppTreeNode.GetDisplayPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.GetDisplayPath
    name: GetDisplayPath
    nameWithType: AppTreeNode.GetDisplayPath
    fullName: SMACD.AppTree.AppTreeNode.GetDisplayPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.GetUUIDPath
  commentId: M:SMACD.AppTree.AppTreeNode.GetUUIDPath
  parent: SMACD.AppTree.AppTreeNode
  name: GetUUIDPath()
  nameWithType: AppTreeNode.GetUUIDPath()
  fullName: SMACD.AppTree.AppTreeNode.GetUUIDPath()
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.GetUUIDPath
    name: GetUUIDPath
    nameWithType: AppTreeNode.GetUUIDPath
    fullName: SMACD.AppTree.AppTreeNode.GetUUIDPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.GetUUIDPath
    name: GetUUIDPath
    nameWithType: AppTreeNode.GetUUIDPath
    fullName: SMACD.AppTree.AppTreeNode.GetUUIDPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.GetPath
  commentId: M:SMACD.AppTree.AppTreeNode.GetPath
  parent: SMACD.AppTree.AppTreeNode
  name: GetPath()
  nameWithType: AppTreeNode.GetPath()
  fullName: SMACD.AppTree.AppTreeNode.GetPath()
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.GetPath
    name: GetPath
    nameWithType: AppTreeNode.GetPath
    fullName: SMACD.AppTree.AppTreeNode.GetPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.GetPath
    name: GetPath
    nameWithType: AppTreeNode.GetPath
    fullName: SMACD.AppTree.AppTreeNode.GetPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.IsDescribedByPath(System.String)
  commentId: M:SMACD.AppTree.AppTreeNode.IsDescribedByPath(System.String)
  parent: SMACD.AppTree.AppTreeNode
  isExternal: true
  name: IsDescribedByPath(String)
  nameWithType: AppTreeNode.IsDescribedByPath(String)
  fullName: SMACD.AppTree.AppTreeNode.IsDescribedByPath(System.String)
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.IsDescribedByPath(System.String)
    name: IsDescribedByPath
    nameWithType: AppTreeNode.IsDescribedByPath
    fullName: SMACD.AppTree.AppTreeNode.IsDescribedByPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.IsDescribedByPath(System.String)
    name: IsDescribedByPath
    nameWithType: AppTreeNode.IsDescribedByPath
    fullName: SMACD.AppTree.AppTreeNode.IsDescribedByPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.NotifyChanged
  commentId: M:SMACD.AppTree.AppTreeNode.NotifyChanged
  parent: SMACD.AppTree.AppTreeNode
  name: NotifyChanged()
  nameWithType: AppTreeNode.NotifyChanged()
  fullName: SMACD.AppTree.AppTreeNode.NotifyChanged()
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.NotifyChanged
    name: NotifyChanged
    nameWithType: AppTreeNode.NotifyChanged
    fullName: SMACD.AppTree.AppTreeNode.NotifyChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.NotifyChanged
    name: NotifyChanged
    nameWithType: AppTreeNode.NotifyChanged
    fullName: SMACD.AppTree.AppTreeNode.NotifyChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.NotifyChildAdded(SMACD.AppTree.AppTreeNode)
  commentId: M:SMACD.AppTree.AppTreeNode.NotifyChildAdded(SMACD.AppTree.AppTreeNode)
  parent: SMACD.AppTree.AppTreeNode
  name: NotifyChildAdded(AppTreeNode)
  nameWithType: AppTreeNode.NotifyChildAdded(AppTreeNode)
  fullName: SMACD.AppTree.AppTreeNode.NotifyChildAdded(SMACD.AppTree.AppTreeNode)
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.NotifyChildAdded(SMACD.AppTree.AppTreeNode)
    name: NotifyChildAdded
    nameWithType: AppTreeNode.NotifyChildAdded
    fullName: SMACD.AppTree.AppTreeNode.NotifyChildAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.NotifyChildAdded(SMACD.AppTree.AppTreeNode)
    name: NotifyChildAdded
    nameWithType: AppTreeNode.NotifyChildAdded
    fullName: SMACD.AppTree.AppTreeNode.NotifyChildAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.NotifyCreated
  commentId: M:SMACD.AppTree.AppTreeNode.NotifyCreated
  parent: SMACD.AppTree.AppTreeNode
  name: NotifyCreated()
  nameWithType: AppTreeNode.NotifyCreated()
  fullName: SMACD.AppTree.AppTreeNode.NotifyCreated()
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.NotifyCreated
    name: NotifyCreated
    nameWithType: AppTreeNode.NotifyCreated
    fullName: SMACD.AppTree.AppTreeNode.NotifyCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.NotifyCreated
    name: NotifyCreated
    nameWithType: AppTreeNode.NotifyCreated
    fullName: SMACD.AppTree.AppTreeNode.NotifyCreated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SMACD.AppTree.IAppTreeNode`1
  commentId: T:SMACD.AppTree.IAppTreeNode`1
  name: IAppTreeNode<TDetailPayload>
  nameWithType: IAppTreeNode<TDetailPayload>
  fullName: SMACD.AppTree.IAppTreeNode<TDetailPayload>
  nameWithType.vb: IAppTreeNode(Of TDetailPayload)
  fullName.vb: SMACD.AppTree.IAppTreeNode(Of TDetailPayload)
  name.vb: IAppTreeNode(Of TDetailPayload)
  spec.csharp:
  - uid: SMACD.AppTree.IAppTreeNode`1
    name: IAppTreeNode
    nameWithType: IAppTreeNode
    fullName: SMACD.AppTree.IAppTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TDetailPayload
    nameWithType: TDetailPayload
    fullName: TDetailPayload
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SMACD.AppTree.IAppTreeNode`1
    name: IAppTreeNode
    nameWithType: IAppTreeNode
    fullName: SMACD.AppTree.IAppTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDetailPayload
    nameWithType: TDetailPayload
    fullName: TDetailPayload
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
  commentId: M:SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
  isExternal: true
  name: ChildrenAre<TChild>(Predicate<TChild>)
  nameWithType: AppTreeNode.ChildrenAre<TChild>(Predicate<TChild>)
  fullName: SMACD.AppTree.AppTreeNode.ChildrenAre<TChild>(System.Predicate<TChild>)
  nameWithType.vb: AppTreeNode.ChildrenAre(Of TChild)(Predicate(Of TChild))
  fullName.vb: SMACD.AppTree.AppTreeNode.ChildrenAre(Of TChild)(System.Predicate(Of TChild))
  name.vb: ChildrenAre(Of TChild)(Predicate(Of TChild))
  spec.csharp:
  - uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
    name: ChildrenAre<TChild>
    nameWithType: AppTreeNode.ChildrenAre<TChild>
    fullName: SMACD.AppTree.AppTreeNode.ChildrenAre<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SMACD.AppTree.AppTreeNode.ChildrenAre``1(System.Predicate{``0})
    name: ChildrenAre(Of TChild)
    nameWithType: AppTreeNode.ChildrenAre(Of TChild)
    fullName: SMACD.AppTree.AppTreeNode.ChildrenAre(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.AppTreeNode.NodeViewName
  commentId: P:SMACD.AppTree.AppTreeNode.NodeViewName
  parent: SMACD.AppTree.AppTreeNode
  name: NodeViewName
  nameWithType: AppTreeNode.NodeViewName
  fullName: SMACD.AppTree.AppTreeNode.NodeViewName
- uid: SMACD.AppTree.ServiceNode.NodeViewName*
  commentId: Overload:SMACD.AppTree.ServiceNode.NodeViewName
  name: NodeViewName
  nameWithType: ServiceNode.NodeViewName
  fullName: SMACD.AppTree.ServiceNode.NodeViewName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SMACD.AppTree.ServiceNode.Host*
  commentId: Overload:SMACD.AppTree.ServiceNode.Host
  name: Host
  nameWithType: ServiceNode.Host
  fullName: SMACD.AppTree.ServiceNode.Host
- uid: SMACD.AppTree.HostNode
  commentId: T:SMACD.AppTree.HostNode
  parent: SMACD.AppTree
  name: HostNode
  nameWithType: HostNode
  fullName: SMACD.AppTree.HostNode
- uid: SMACD.AppTree.ServiceNode.ServiceNodeType*
  commentId: Overload:SMACD.AppTree.ServiceNode.ServiceNodeType
  name: ServiceNodeType
  nameWithType: ServiceNode.ServiceNodeType
  fullName: SMACD.AppTree.ServiceNode.ServiceNodeType
- uid: SMACD.AppTree.ServiceNode.KnownServiceNodeTypes
  commentId: T:SMACD.AppTree.ServiceNode.KnownServiceNodeTypes
  parent: SMACD.AppTree
  name: ServiceNode.KnownServiceNodeTypes
  nameWithType: ServiceNode.KnownServiceNodeTypes
  fullName: SMACD.AppTree.ServiceNode.KnownServiceNodeTypes
- uid: SMACD.AppTree.ServiceNode.Protocol*
  commentId: Overload:SMACD.AppTree.ServiceNode.Protocol
  name: Protocol
  nameWithType: ServiceNode.Protocol
  fullName: SMACD.AppTree.ServiceNode.Protocol
- uid: System.Net.Sockets.ProtocolType
  commentId: T:System.Net.Sockets.ProtocolType
  parent: System.Net.Sockets
  isExternal: true
  name: ProtocolType
  nameWithType: ProtocolType
  fullName: System.Net.Sockets.ProtocolType
- uid: System.Net.Sockets
  commentId: N:System.Net.Sockets
  isExternal: true
  name: System.Net.Sockets
  nameWithType: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: SMACD.AppTree.ServiceNode.Port*
  commentId: Overload:SMACD.AppTree.ServiceNode.Port
  name: Port
  nameWithType: ServiceNode.Port
  fullName: SMACD.AppTree.ServiceNode.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SMACD.AppTree.ServiceNode.Detail*
  commentId: Overload:SMACD.AppTree.ServiceNode.Detail
  name: Detail
  nameWithType: ServiceNode.Detail
  fullName: SMACD.AppTree.ServiceNode.Detail
- uid: SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}.Detail
  commentId: P:SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}.Detail
  parent: SMACD.AppTree.IAppTreeNode{SMACD.AppTree.Details.ServiceDetails}
  definition: SMACD.AppTree.IAppTreeNode`1.Detail
  name: Detail
  nameWithType: IAppTreeNode<ServiceDetails>.Detail
  fullName: SMACD.AppTree.IAppTreeNode<SMACD.AppTree.Details.ServiceDetails>.Detail
  nameWithType.vb: IAppTreeNode(Of ServiceDetails).Detail
  fullName.vb: SMACD.AppTree.IAppTreeNode(Of SMACD.AppTree.Details.ServiceDetails).Detail
- uid: SMACD.AppTree.Versionable{SMACD.AppTree.Details.ServiceDetails}
  commentId: T:SMACD.AppTree.Versionable{SMACD.AppTree.Details.ServiceDetails}
  parent: SMACD.AppTree
  definition: SMACD.AppTree.Versionable`1
  name: Versionable<ServiceDetails>
  nameWithType: Versionable<ServiceDetails>
  fullName: SMACD.AppTree.Versionable<SMACD.AppTree.Details.ServiceDetails>
  nameWithType.vb: Versionable(Of ServiceDetails)
  fullName.vb: SMACD.AppTree.Versionable(Of SMACD.AppTree.Details.ServiceDetails)
  name.vb: Versionable(Of ServiceDetails)
  spec.csharp:
  - uid: SMACD.AppTree.Versionable`1
    name: Versionable
    nameWithType: Versionable
    fullName: SMACD.AppTree.Versionable
  - name: <
    nameWithType: <
    fullName: <
  - uid: SMACD.AppTree.Details.ServiceDetails
    name: ServiceDetails
    nameWithType: ServiceDetails
    fullName: SMACD.AppTree.Details.ServiceDetails
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SMACD.AppTree.Versionable`1
    name: Versionable
    nameWithType: Versionable
    fullName: SMACD.AppTree.Versionable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SMACD.AppTree.Details.ServiceDetails
    name: ServiceDetails
    nameWithType: ServiceDetails
    fullName: SMACD.AppTree.Details.ServiceDetails
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.IAppTreeNode`1.Detail
  commentId: P:SMACD.AppTree.IAppTreeNode`1.Detail
  name: Detail
  nameWithType: IAppTreeNode<TDetailPayload>.Detail
  fullName: SMACD.AppTree.IAppTreeNode<TDetailPayload>.Detail
  nameWithType.vb: IAppTreeNode(Of TDetailPayload).Detail
  fullName.vb: SMACD.AppTree.IAppTreeNode(Of TDetailPayload).Detail
- uid: SMACD.AppTree.Versionable`1
  commentId: T:SMACD.AppTree.Versionable`1
  parent: SMACD.AppTree
  name: Versionable<TData>
  nameWithType: Versionable<TData>
  fullName: SMACD.AppTree.Versionable<TData>
  nameWithType.vb: Versionable(Of TData)
  fullName.vb: SMACD.AppTree.Versionable(Of TData)
  name.vb: Versionable(Of TData)
  spec.csharp:
  - uid: SMACD.AppTree.Versionable`1
    name: Versionable
    nameWithType: Versionable
    fullName: SMACD.AppTree.Versionable
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SMACD.AppTree.Versionable`1
    name: Versionable
    nameWithType: Versionable
    fullName: SMACD.AppTree.Versionable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.ServiceNode.ToString*
  commentId: Overload:SMACD.AppTree.ServiceNode.ToString
  name: ToString
  nameWithType: ServiceNode.ToString
  fullName: SMACD.AppTree.ServiceNode.ToString
