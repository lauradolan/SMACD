### YamlMime:ManagedReference
items:
- uid: SMACD.Data.ServiceMapFile
  commentId: T:SMACD.Data.ServiceMapFile
  id: ServiceMapFile
  parent: SMACD.Data
  children:
  - SMACD.Data.ServiceMapFile.Created
  - SMACD.Data.ServiceMapFile.EnvironmentSettings
  - SMACD.Data.ServiceMapFile.Features
  - SMACD.Data.ServiceMapFile.GetServiceMap(System.String)
  - SMACD.Data.ServiceMapFile.GetServiceMapFromYaml(System.String)
  - SMACD.Data.ServiceMapFile.PutServiceMap(SMACD.Data.ServiceMapFile,System.String)
  - SMACD.Data.ServiceMapFile.Targets
  - SMACD.Data.ServiceMapFile.Updated
  langs:
  - csharp
  - vb
  name: ServiceMapFile
  nameWithType: ServiceMapFile
  fullName: SMACD.Data.ServiceMapFile
  type: Class
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ServiceMapFile
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 12
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nService Map - Stores Features and Resources for an application&apos;s test, as well as environment settings\n"
  example: []
  syntax:
    content: 'public class ServiceMapFile : IModel'
    content.vb: >-
      Public Class ServiceMapFile

          Implements IModel
  inheritance:
  - System.Object
  implements:
  - SMACD.Data.IModel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SMACD.Data.ServiceMapFile.Created
  commentId: P:SMACD.Data.ServiceMapFile.Created
  id: Created
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: ServiceMapFile.Created
  fullName: SMACD.Data.ServiceMapFile.Created
  type: Property
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Created
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 17
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nWhen this file was created originally\n"
  example: []
  syntax:
    content: public DateTime Created { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Created As Date
  overload: SMACD.Data.ServiceMapFile.Created*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.Data.ServiceMapFile.Updated
  commentId: P:SMACD.Data.ServiceMapFile.Updated
  id: Updated
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: ServiceMapFile.Updated
  fullName: SMACD.Data.ServiceMapFile.Updated
  type: Property
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Updated
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 22
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nWhen this file was last updated\n"
  example: []
  syntax:
    content: public DateTime Updated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Updated As Date
  overload: SMACD.Data.ServiceMapFile.Updated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.Data.ServiceMapFile.EnvironmentSettings
  commentId: P:SMACD.Data.ServiceMapFile.EnvironmentSettings
  id: EnvironmentSettings
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: ServiceMapFile.EnvironmentSettings
  fullName: SMACD.Data.ServiceMapFile.EnvironmentSettings
  type: Property
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: EnvironmentSettings
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 27
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nConfiguration options for applications using this Service Map\n"
  example: []
  syntax:
    content: public EnvironmentSettings EnvironmentSettings { get; set; }
    parameters: []
    return:
      type: SMACD.Data.EnvironmentSettings
    content.vb: Public Property EnvironmentSettings As EnvironmentSettings
  overload: SMACD.Data.ServiceMapFile.EnvironmentSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.Data.ServiceMapFile.Features
  commentId: P:SMACD.Data.ServiceMapFile.Features
  id: Features
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: ServiceMapFile.Features
  fullName: SMACD.Data.ServiceMapFile.Features
  type: Property
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Features
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 32
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nFeatures stored in this Project Map\n"
  example: []
  syntax:
    content: public IList<FeatureModel> Features { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{SMACD.Data.FeatureModel}
    content.vb: Public Property Features As IList(Of FeatureModel)
  overload: SMACD.Data.ServiceMapFile.Features*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.Data.ServiceMapFile.Targets
  commentId: P:SMACD.Data.ServiceMapFile.Targets
  id: Targets
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: Targets
  nameWithType: ServiceMapFile.Targets
  fullName: SMACD.Data.ServiceMapFile.Targets
  type: Property
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Targets
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 37
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nTargets stored in this Service Map\n"
  example: []
  syntax:
    content: public IList<TargetModel> Targets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{SMACD.Data.TargetModel}
    content.vb: Public Property Targets As IList(Of TargetModel)
  overload: SMACD.Data.ServiceMapFile.Targets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SMACD.Data.ServiceMapFile.GetServiceMap(System.String)
  commentId: M:SMACD.Data.ServiceMapFile.GetServiceMap(System.String)
  id: GetServiceMap(System.String)
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: GetServiceMap(String)
  nameWithType: ServiceMapFile.GetServiceMap(String)
  fullName: SMACD.Data.ServiceMapFile.GetServiceMap(System.String)
  type: Method
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: GetServiceMap
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 44
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nDeserialize a Service Map from a given file\n"
  example: []
  syntax:
    content: public static ServiceMapFile GetServiceMap(string file)
    parameters:
    - id: file
      type: System.String
      description: File containing Service Map
    return:
      type: SMACD.Data.ServiceMapFile
      description: ''
    content.vb: Public Shared Function GetServiceMap(file As String) As ServiceMapFile
  overload: SMACD.Data.ServiceMapFile.GetServiceMap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SMACD.Data.ServiceMapFile.GetServiceMapFromYaml(System.String)
  commentId: M:SMACD.Data.ServiceMapFile.GetServiceMapFromYaml(System.String)
  id: GetServiceMapFromYaml(System.String)
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: GetServiceMapFromYaml(String)
  nameWithType: ServiceMapFile.GetServiceMapFromYaml(String)
  fullName: SMACD.Data.ServiceMapFile.GetServiceMapFromYaml(System.String)
  type: Method
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: GetServiceMapFromYaml
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 64
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nDeserialize a Service Map from a YAML string\n"
  example: []
  syntax:
    content: public static ServiceMapFile GetServiceMapFromYaml(string yaml)
    parameters:
    - id: yaml
      type: System.String
      description: Service Map YAML
    return:
      type: SMACD.Data.ServiceMapFile
      description: ''
    content.vb: Public Shared Function GetServiceMapFromYaml(yaml As String) As ServiceMapFile
  overload: SMACD.Data.ServiceMapFile.GetServiceMapFromYaml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SMACD.Data.ServiceMapFile.PutServiceMap(SMACD.Data.ServiceMapFile,System.String)
  commentId: M:SMACD.Data.ServiceMapFile.PutServiceMap(SMACD.Data.ServiceMapFile,System.String)
  id: PutServiceMap(SMACD.Data.ServiceMapFile,System.String)
  parent: SMACD.Data.ServiceMapFile
  langs:
  - csharp
  - vb
  name: PutServiceMap(ServiceMapFile, String)
  nameWithType: ServiceMapFile.PutServiceMap(ServiceMapFile, String)
  fullName: SMACD.Data.ServiceMapFile.PutServiceMap(SMACD.Data.ServiceMapFile, System.String)
  type: Method
  source:
    remote:
      path: SMACD.Data/ServiceMapFile.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: PutServiceMap
    path: ../SMACD.Data/ServiceMapFile.cs
    startLine: 79
  assemblies:
  - SMACD.Data
  namespace: SMACD.Data
  summary: "\nSerialize a Service Map to a given file\n"
  example: []
  syntax:
    content: public static void PutServiceMap(ServiceMapFile serviceMap, string file)
    parameters:
    - id: serviceMap
      type: SMACD.Data.ServiceMapFile
      description: Service Map to serialize
    - id: file
      type: System.String
      description: File to serialize Service Map to
    content.vb: Public Shared Sub PutServiceMap(serviceMap As ServiceMapFile, file As String)
  overload: SMACD.Data.ServiceMapFile.PutServiceMap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SMACD.Data
  commentId: N:SMACD.Data
  name: SMACD.Data
  nameWithType: SMACD.Data
  fullName: SMACD.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SMACD.Data.IModel
  commentId: T:SMACD.Data.IModel
  parent: SMACD.Data
  name: IModel
  nameWithType: IModel
  fullName: SMACD.Data.IModel
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SMACD.Data.ServiceMapFile.Created*
  commentId: Overload:SMACD.Data.ServiceMapFile.Created
  name: Created
  nameWithType: ServiceMapFile.Created
  fullName: SMACD.Data.ServiceMapFile.Created
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SMACD.Data.ServiceMapFile.Updated*
  commentId: Overload:SMACD.Data.ServiceMapFile.Updated
  name: Updated
  nameWithType: ServiceMapFile.Updated
  fullName: SMACD.Data.ServiceMapFile.Updated
- uid: SMACD.Data.ServiceMapFile.EnvironmentSettings*
  commentId: Overload:SMACD.Data.ServiceMapFile.EnvironmentSettings
  name: EnvironmentSettings
  nameWithType: ServiceMapFile.EnvironmentSettings
  fullName: SMACD.Data.ServiceMapFile.EnvironmentSettings
- uid: SMACD.Data.EnvironmentSettings
  commentId: T:SMACD.Data.EnvironmentSettings
  parent: SMACD.Data
  name: EnvironmentSettings
  nameWithType: EnvironmentSettings
  fullName: SMACD.Data.EnvironmentSettings
- uid: SMACD.Data.ServiceMapFile.Features*
  commentId: Overload:SMACD.Data.ServiceMapFile.Features
  name: Features
  nameWithType: ServiceMapFile.Features
  fullName: SMACD.Data.ServiceMapFile.Features
- uid: System.Collections.Generic.IList{SMACD.Data.FeatureModel}
  commentId: T:System.Collections.Generic.IList{SMACD.Data.FeatureModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FeatureModel>
  nameWithType: IList<FeatureModel>
  fullName: System.Collections.Generic.IList<SMACD.Data.FeatureModel>
  nameWithType.vb: IList(Of FeatureModel)
  fullName.vb: System.Collections.Generic.IList(Of SMACD.Data.FeatureModel)
  name.vb: IList(Of FeatureModel)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SMACD.Data.FeatureModel
    name: FeatureModel
    nameWithType: FeatureModel
    fullName: SMACD.Data.FeatureModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SMACD.Data.FeatureModel
    name: FeatureModel
    nameWithType: FeatureModel
    fullName: SMACD.Data.FeatureModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SMACD.Data.ServiceMapFile.Targets*
  commentId: Overload:SMACD.Data.ServiceMapFile.Targets
  name: Targets
  nameWithType: ServiceMapFile.Targets
  fullName: SMACD.Data.ServiceMapFile.Targets
- uid: System.Collections.Generic.IList{SMACD.Data.TargetModel}
  commentId: T:System.Collections.Generic.IList{SMACD.Data.TargetModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TargetModel>
  nameWithType: IList<TargetModel>
  fullName: System.Collections.Generic.IList<SMACD.Data.TargetModel>
  nameWithType.vb: IList(Of TargetModel)
  fullName.vb: System.Collections.Generic.IList(Of SMACD.Data.TargetModel)
  name.vb: IList(Of TargetModel)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SMACD.Data.TargetModel
    name: TargetModel
    nameWithType: TargetModel
    fullName: SMACD.Data.TargetModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SMACD.Data.TargetModel
    name: TargetModel
    nameWithType: TargetModel
    fullName: SMACD.Data.TargetModel
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.Data.ServiceMapFile.GetServiceMap*
  commentId: Overload:SMACD.Data.ServiceMapFile.GetServiceMap
  name: GetServiceMap
  nameWithType: ServiceMapFile.GetServiceMap
  fullName: SMACD.Data.ServiceMapFile.GetServiceMap
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SMACD.Data.ServiceMapFile
  commentId: T:SMACD.Data.ServiceMapFile
  parent: SMACD.Data
  name: ServiceMapFile
  nameWithType: ServiceMapFile
  fullName: SMACD.Data.ServiceMapFile
- uid: SMACD.Data.ServiceMapFile.GetServiceMapFromYaml*
  commentId: Overload:SMACD.Data.ServiceMapFile.GetServiceMapFromYaml
  name: GetServiceMapFromYaml
  nameWithType: ServiceMapFile.GetServiceMapFromYaml
  fullName: SMACD.Data.ServiceMapFile.GetServiceMapFromYaml
- uid: SMACD.Data.ServiceMapFile.PutServiceMap*
  commentId: Overload:SMACD.Data.ServiceMapFile.PutServiceMap
  name: PutServiceMap
  nameWithType: ServiceMapFile.PutServiceMap
  fullName: SMACD.Data.ServiceMapFile.PutServiceMap
