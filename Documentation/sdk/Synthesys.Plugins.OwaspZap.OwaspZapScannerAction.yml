### YamlMime:ManagedReference
items:
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  commentId: T:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  id: OwaspZapScannerAction
  parent: Synthesys.Plugins.OwaspZap
  children:
  - Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act
  - Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive
  - Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService
  - Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider
  langs:
  - csharp
  - vb
  name: OwaspZapScannerAction
  nameWithType: OwaspZapScannerAction
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  type: Class
  source:
    remote:
      path: Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: OwaspZapScannerAction
    path: ../Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
    startLine: 23
  assemblies:
  - Synthesys.Plugins.OwaspZap
  namespace: Synthesys.Plugins.OwaspZap
  summary: "\nThe OWASP Zed Attack Proxy (ZAP) is an easy to use integrated penetration testing tool for finding vulnerabilities\nin web applications. It is designed to be used by people with a wide range of security experience and as such is\nideal for developers and functional testers who are new to penetration testing as well as being a useful addition\nto an experienced pen testers toolbox.\n"
  example: []
  syntax:
    content: >-
      [Extension("owaspzap", Name = "OWASP ZAP Scanner", Version = "1.0.0", Author = "Anthony Turner", Website = "https://github.com/anthturner/smacd")]

      public class OwaspZapScannerAction : ActionExtension, IOperateOnHttpService
    content.vb: >-
      <Extension("owaspzap", Name:="OWASP ZAP Scanner", Version:="1.0.0", Author:="Anthony Turner", Website:="https://github.com/anthturner/smacd")>

      Public Class OwaspZapScannerAction

          Inherits ActionExtension

          Implements IOperateOnHttpService
  inheritance:
  - System.Object
  - Synthesys.SDK.Extensions.Extension
  - Synthesys.SDK.Extensions.ActionExtension
  implements:
  - Synthesys.SDK.Capabilities.IOperateOnHttpService
  inheritedMembers:
  - Synthesys.SDK.Extensions.Extension.Logger
  - Synthesys.SDK.Extensions.Extension.Initialize
  - Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  - Synthesys.SDK.Extensions.Extension.Metadata
  - Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  - Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Synthesys.SDK.Extensions.Extension.Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: Synthesys.SDK.Attributes.ExtensionAttribute
    ctor: Synthesys.SDK.Attributes.ExtensionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: owaspzap
    namedArguments:
    - name: Name
      type: System.String
      value: OWASP ZAP Scanner
    - name: Version
      type: System.String
      value: 1.0.0
    - name: Author
      type: System.String
      value: Anthony Turner
    - name: Website
      type: System.String
      value: https://github.com/anthturner/smacd
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive
  commentId: P:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive
  id: Aggressive
  parent: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  langs:
  - csharp
  - vb
  name: Aggressive
  nameWithType: OwaspZapScannerAction.Aggressive
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Aggressive
    path: ../Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
    startLine: 36
  assemblies:
  - Synthesys.Plugins.OwaspZap
  namespace: Synthesys.Plugins.OwaspZap
  summary: "\nIf <code>TRUE</code>, the &quot;zap-full-scan&quot; script will be used; otherwise the &quot;zap-baseline&quot; script is used\n"
  example: []
  syntax:
    content: >-
      [Configurable("Aggressive")]

      public bool Aggressive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Configurable("Aggressive")>

      Public Property Aggressive As Boolean
  overload: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive*
  attributes:
  - type: Synthesys.SDK.Attributes.ConfigurableAttribute
    ctor: Synthesys.SDK.Attributes.ConfigurableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Aggressive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider
  commentId: P:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider
  id: UseAjaxSpider
  parent: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  langs:
  - csharp
  - vb
  name: UseAjaxSpider
  nameWithType: OwaspZapScannerAction.UseAjaxSpider
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: UseAjaxSpider
    path: ../Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
    startLine: 42
  assemblies:
  - Synthesys.Plugins.OwaspZap
  namespace: Synthesys.Plugins.OwaspZap
  summary: "\nIf <code>TRUE</code>, the scan will use an AJAX-aware spider\n"
  example: []
  syntax:
    content: >-
      [Configurable("UseAjaxSpider")]

      public bool UseAjaxSpider { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Configurable("UseAjaxSpider")>

      Public Property UseAjaxSpider As Boolean
  overload: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider*
  attributes:
  - type: Synthesys.SDK.Attributes.ConfigurableAttribute
    ctor: Synthesys.SDK.Attributes.ConfigurableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UseAjaxSpider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService
  commentId: P:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService
  id: HttpService
  parent: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  langs:
  - csharp
  - vb
  name: HttpService
  nameWithType: OwaspZapScannerAction.HttpService
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService
  type: Property
  source:
    remote:
      path: Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: HttpService
    path: ../Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
    startLine: 48
  assemblies:
  - Synthesys.Plugins.OwaspZap
  namespace: Synthesys.Plugins.OwaspZap
  summary: "\nHTTP Service to scan\n"
  example: []
  syntax:
    content: public HttpServiceNode HttpService { get; set; }
    parameters: []
    return:
      type: SMACD.AppTree.HttpServiceNode
    content.vb: Public Property HttpService As HttpServiceNode
  overload: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService*
  implements:
  - Synthesys.SDK.Capabilities.IOperateOnHttpService.HttpService
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act
  commentId: M:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act
  id: Act
  parent: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction
  langs:
  - csharp
  - vb
  name: Act()
  nameWithType: OwaspZapScannerAction.Act()
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act()
  type: Method
  source:
    remote:
      path: Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Act
    path: ../Synthesys.Plugins.OwaspZap/OwaspZapScannerAction.cs
    startLine: 50
  assemblies:
  - Synthesys.Plugins.OwaspZap
  namespace: Synthesys.Plugins.OwaspZap
  syntax:
    content: public override ExtensionReport Act()
    return:
      type: Synthesys.SDK.ExtensionReport
    content.vb: Public Overrides Function Act As ExtensionReport
  overridden: Synthesys.SDK.Extensions.ActionExtension.Act
  overload: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Synthesys.Plugins.OwaspZap
  commentId: N:Synthesys.Plugins.OwaspZap
  name: Synthesys.Plugins.OwaspZap
  nameWithType: Synthesys.Plugins.OwaspZap
  fullName: Synthesys.Plugins.OwaspZap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Synthesys.SDK.Extensions.Extension
  commentId: T:Synthesys.SDK.Extensions.Extension
  parent: Synthesys.SDK.Extensions
  name: Extension
  nameWithType: Extension
  fullName: Synthesys.SDK.Extensions.Extension
- uid: Synthesys.SDK.Extensions.ActionExtension
  commentId: T:Synthesys.SDK.Extensions.ActionExtension
  parent: Synthesys.SDK.Extensions
  name: ActionExtension
  nameWithType: ActionExtension
  fullName: Synthesys.SDK.Extensions.ActionExtension
- uid: Synthesys.SDK.Capabilities.IOperateOnHttpService
  commentId: T:Synthesys.SDK.Capabilities.IOperateOnHttpService
  parent: Synthesys.SDK.Capabilities
  name: IOperateOnHttpService
  nameWithType: IOperateOnHttpService
  fullName: Synthesys.SDK.Capabilities.IOperateOnHttpService
- uid: Synthesys.SDK.Extensions.Extension.Logger
  commentId: P:Synthesys.SDK.Extensions.Extension.Logger
  parent: Synthesys.SDK.Extensions.Extension
  name: Logger
  nameWithType: Extension.Logger
  fullName: Synthesys.SDK.Extensions.Extension.Logger
- uid: Synthesys.SDK.Extensions.Extension.Initialize
  commentId: M:Synthesys.SDK.Extensions.Extension.Initialize
  parent: Synthesys.SDK.Extensions.Extension
  name: Initialize()
  nameWithType: Extension.Initialize()
  fullName: Synthesys.SDK.Extensions.Extension.Initialize()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.Initialize
    name: Initialize
    nameWithType: Extension.Initialize
    fullName: Synthesys.SDK.Extensions.Extension.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.Initialize
    name: Initialize
    nameWithType: Extension.Initialize
    fullName: Synthesys.SDK.Extensions.Extension.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  commentId: M:Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  parent: Synthesys.SDK.Extensions.Extension
  name: ValidateEnvironmentReadiness()
  nameWithType: Extension.ValidateEnvironmentReadiness()
  fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
    name: ValidateEnvironmentReadiness
    nameWithType: Extension.ValidateEnvironmentReadiness
    fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
    name: ValidateEnvironmentReadiness
    nameWithType: Extension.ValidateEnvironmentReadiness
    fullName: Synthesys.SDK.Extensions.Extension.ValidateEnvironmentReadiness
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  commentId: M:Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  parent: Synthesys.SDK.Extensions.Extension
  isExternal: true
  name: SetLoggerName(String)
  nameWithType: Extension.SetLoggerName(String)
  fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
    name: SetLoggerName
    nameWithType: Extension.SetLoggerName
    fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.Extension.SetLoggerName(System.String)
    name: SetLoggerName
    nameWithType: Extension.SetLoggerName
    fullName: Synthesys.SDK.Extensions.Extension.SetLoggerName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.Metadata
  commentId: P:Synthesys.SDK.Extensions.Extension.Metadata
  parent: Synthesys.SDK.Extensions.Extension
  name: Metadata
  nameWithType: Extension.Metadata
  fullName: Synthesys.SDK.Extensions.Extension.Metadata
- uid: Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  commentId: P:Synthesys.SDK.Extensions.Extension.ConfigurableProperties
  parent: Synthesys.SDK.Extensions.Extension
  name: ConfigurableProperties
  nameWithType: Extension.ConfigurableProperties
  fullName: Synthesys.SDK.Extensions.Extension.ConfigurableProperties
- uid: Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  commentId: P:Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
  parent: Synthesys.SDK.Extensions.Extension
  name: ConfigurablePropertyValues
  nameWithType: Extension.ConfigurablePropertyValues
  fullName: Synthesys.SDK.Extensions.Extension.ConfigurablePropertyValues
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.Extensions.Extension.Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Synthesys.Tasks.ExtensionConfigurator
  definition: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Configure(AppTreeNode, Dictionary<String, String>)
  nameWithType: ExtensionConfigurator.Configure(AppTreeNode, Dictionary<String, String>)
  fullName: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: ExtensionConfigurator.Configure(AppTreeNode, Dictionary(Of String, String))
  fullName.vb: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Configure(AppTreeNode, Dictionary(Of String, String))
  spec.csharp:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.SDK.Extensions
  commentId: N:Synthesys.SDK.Extensions
  name: Synthesys.SDK.Extensions
  nameWithType: Synthesys.SDK.Extensions
  fullName: Synthesys.SDK.Extensions
- uid: Synthesys.SDK.Capabilities
  commentId: N:Synthesys.SDK.Capabilities
  name: Synthesys.SDK.Capabilities
  nameWithType: Synthesys.SDK.Capabilities
  fullName: Synthesys.SDK.Capabilities
- uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Configure(Extension, AppTreeNode, Dictionary<String, String>)
  nameWithType: ExtensionConfigurator.Configure(Extension, AppTreeNode, Dictionary<String, String>)
  fullName: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: ExtensionConfigurator.Configure(Extension, AppTreeNode, Dictionary(Of String, String))
  fullName.vb: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension, SMACD.AppTree.AppTreeNode, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Configure(Extension, AppTreeNode, Dictionary(Of String, String))
  spec.csharp:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Extensions.Extension
    name: Extension
    nameWithType: Extension
    fullName: Synthesys.SDK.Extensions.Extension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.Tasks.ExtensionConfigurator.Configure(Synthesys.SDK.Extensions.Extension,SMACD.AppTree.AppTreeNode,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Configure
    nameWithType: ExtensionConfigurator.Configure
    fullName: Synthesys.Tasks.ExtensionConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Synthesys.SDK.Extensions.Extension
    name: Extension
    nameWithType: Extension
    fullName: Synthesys.SDK.Extensions.Extension
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SMACD.AppTree.AppTreeNode
    name: AppTreeNode
    nameWithType: AppTreeNode
    fullName: SMACD.AppTree.AppTreeNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Tasks.ExtensionConfigurator
  commentId: T:Synthesys.Tasks.ExtensionConfigurator
  parent: Synthesys.Tasks
  name: ExtensionConfigurator
  nameWithType: ExtensionConfigurator
  fullName: Synthesys.Tasks.ExtensionConfigurator
- uid: Synthesys.Tasks
  commentId: N:Synthesys.Tasks
  name: Synthesys.Tasks
  nameWithType: Synthesys.Tasks
  fullName: Synthesys.Tasks
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive*
  commentId: Overload:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive
  name: Aggressive
  nameWithType: OwaspZapScannerAction.Aggressive
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Aggressive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider*
  commentId: Overload:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider
  name: UseAjaxSpider
  nameWithType: OwaspZapScannerAction.UseAjaxSpider
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.UseAjaxSpider
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService*
  commentId: Overload:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService
  name: HttpService
  nameWithType: OwaspZapScannerAction.HttpService
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.HttpService
- uid: Synthesys.SDK.Capabilities.IOperateOnHttpService.HttpService
  commentId: P:Synthesys.SDK.Capabilities.IOperateOnHttpService.HttpService
  parent: Synthesys.SDK.Capabilities.IOperateOnHttpService
  name: HttpService
  nameWithType: IOperateOnHttpService.HttpService
  fullName: Synthesys.SDK.Capabilities.IOperateOnHttpService.HttpService
- uid: SMACD.AppTree.HttpServiceNode
  commentId: T:SMACD.AppTree.HttpServiceNode
  parent: SMACD.AppTree
  name: HttpServiceNode
  nameWithType: HttpServiceNode
  fullName: SMACD.AppTree.HttpServiceNode
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
- uid: Synthesys.SDK.Extensions.ActionExtension.Act
  commentId: M:Synthesys.SDK.Extensions.ActionExtension.Act
  parent: Synthesys.SDK.Extensions.ActionExtension
  name: Act()
  nameWithType: ActionExtension.Act()
  fullName: Synthesys.SDK.Extensions.ActionExtension.Act()
  spec.csharp:
  - uid: Synthesys.SDK.Extensions.ActionExtension.Act
    name: Act
    nameWithType: ActionExtension.Act
    fullName: Synthesys.SDK.Extensions.ActionExtension.Act
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.Extensions.ActionExtension.Act
    name: Act
    nameWithType: ActionExtension.Act
    fullName: Synthesys.SDK.Extensions.ActionExtension.Act
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act*
  commentId: Overload:Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act
  name: Act
  nameWithType: OwaspZapScannerAction.Act
  fullName: Synthesys.Plugins.OwaspZap.OwaspZapScannerAction.Act
- uid: Synthesys.SDK.ExtensionReport
  commentId: T:Synthesys.SDK.ExtensionReport
  parent: Synthesys.SDK
  name: ExtensionReport
  nameWithType: ExtensionReport
  fullName: Synthesys.SDK.ExtensionReport
- uid: Synthesys.SDK
  commentId: N:Synthesys.SDK
  name: Synthesys.SDK
  nameWithType: Synthesys.SDK
  fullName: Synthesys.SDK
