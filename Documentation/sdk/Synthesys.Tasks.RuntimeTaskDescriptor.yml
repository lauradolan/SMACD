### YamlMime:ManagedReference
items:
- uid: Synthesys.Tasks.RuntimeTaskDescriptor
  commentId: T:Synthesys.Tasks.RuntimeTaskDescriptor
  id: RuntimeTaskDescriptor
  parent: Synthesys.Tasks
  children:
  - Synthesys.Tasks.RuntimeTaskDescriptor.Artifact
  - Synthesys.Tasks.RuntimeTaskDescriptor.Extension
  - Synthesys.Tasks.RuntimeTaskDescriptor.Task
  langs:
  - csharp
  - vb
  name: RuntimeTaskDescriptor
  nameWithType: RuntimeTaskDescriptor
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor
  type: Class
  source:
    remote:
      path: Synthesys.Tasks/RuntimeTaskDescriptor.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: RuntimeTaskDescriptor
    path: ../Synthesys.Tasks/RuntimeTaskDescriptor.cs
    startLine: 8
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  syntax:
    content: public class RuntimeTaskDescriptor
    content.vb: Public Class RuntimeTaskDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.Tasks.RuntimeTaskDescriptor.Task
  commentId: P:Synthesys.Tasks.RuntimeTaskDescriptor.Task
  id: Task
  parent: Synthesys.Tasks.RuntimeTaskDescriptor
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: RuntimeTaskDescriptor.Task
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor.Task
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/RuntimeTaskDescriptor.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Task
    path: ../Synthesys.Tasks/RuntimeTaskDescriptor.cs
    startLine: 10
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  syntax:
    content: public Task<List<ExtensionReport>> Task { get; set; }
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}}
    content.vb: Public Property Task As Task(Of List(Of ExtensionReport))
  overload: Synthesys.Tasks.RuntimeTaskDescriptor.Task*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Tasks.RuntimeTaskDescriptor.Extension
  commentId: P:Synthesys.Tasks.RuntimeTaskDescriptor.Extension
  id: Extension
  parent: Synthesys.Tasks.RuntimeTaskDescriptor
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: RuntimeTaskDescriptor.Extension
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor.Extension
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/RuntimeTaskDescriptor.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Extension
    path: ../Synthesys.Tasks/RuntimeTaskDescriptor.cs
    startLine: 11
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  syntax:
    content: public Extension Extension { get; set; }
    parameters: []
    return:
      type: Synthesys.SDK.Extensions.Extension
    content.vb: Public Property Extension As Extension
  overload: Synthesys.Tasks.RuntimeTaskDescriptor.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.Tasks.RuntimeTaskDescriptor.Artifact
  commentId: P:Synthesys.Tasks.RuntimeTaskDescriptor.Artifact
  id: Artifact
  parent: Synthesys.Tasks.RuntimeTaskDescriptor
  langs:
  - csharp
  - vb
  name: Artifact
  nameWithType: RuntimeTaskDescriptor.Artifact
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor.Artifact
  type: Property
  source:
    remote:
      path: Synthesys.Tasks/RuntimeTaskDescriptor.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Artifact
    path: ../Synthesys.Tasks/RuntimeTaskDescriptor.cs
    startLine: 12
  assemblies:
  - Synthesys.Tasks
  namespace: Synthesys.Tasks
  syntax:
    content: public AppTreeNode Artifact { get; set; }
    parameters: []
    return:
      type: SMACD.AppTree.AppTreeNode
    content.vb: Public Property Artifact As AppTreeNode
  overload: Synthesys.Tasks.RuntimeTaskDescriptor.Artifact*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Synthesys.Tasks
  commentId: N:Synthesys.Tasks
  name: Synthesys.Tasks
  nameWithType: Synthesys.Tasks
  fullName: Synthesys.Tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.Tasks.RuntimeTaskDescriptor.Task*
  commentId: Overload:Synthesys.Tasks.RuntimeTaskDescriptor.Task
  name: Task
  nameWithType: RuntimeTaskDescriptor.Task
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor.Task
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Synthesys.SDK.ExtensionReport}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ExtensionReport>>
  nameWithType: Task<List<ExtensionReport>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Synthesys.SDK.ExtensionReport>>
  nameWithType.vb: Task(Of List(Of ExtensionReport))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Synthesys.SDK.ExtensionReport))
  name.vb: Task(Of List(Of ExtensionReport))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Synthesys.SDK.ExtensionReport
    name: ExtensionReport
    nameWithType: ExtensionReport
    fullName: Synthesys.SDK.ExtensionReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Synthesys.SDK.ExtensionReport
    name: ExtensionReport
    nameWithType: ExtensionReport
    fullName: Synthesys.SDK.ExtensionReport
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Synthesys.Tasks.RuntimeTaskDescriptor.Extension*
  commentId: Overload:Synthesys.Tasks.RuntimeTaskDescriptor.Extension
  name: Extension
  nameWithType: RuntimeTaskDescriptor.Extension
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor.Extension
- uid: Synthesys.SDK.Extensions.Extension
  commentId: T:Synthesys.SDK.Extensions.Extension
  parent: Synthesys.SDK.Extensions
  name: Extension
  nameWithType: Extension
  fullName: Synthesys.SDK.Extensions.Extension
- uid: Synthesys.SDK.Extensions
  commentId: N:Synthesys.SDK.Extensions
  name: Synthesys.SDK.Extensions
  nameWithType: Synthesys.SDK.Extensions
  fullName: Synthesys.SDK.Extensions
- uid: Synthesys.Tasks.RuntimeTaskDescriptor.Artifact*
  commentId: Overload:Synthesys.Tasks.RuntimeTaskDescriptor.Artifact
  name: Artifact
  nameWithType: RuntimeTaskDescriptor.Artifact
  fullName: Synthesys.Tasks.RuntimeTaskDescriptor.Artifact
- uid: SMACD.AppTree.AppTreeNode
  commentId: T:SMACD.AppTree.AppTreeNode
  parent: SMACD.AppTree
  name: AppTreeNode
  nameWithType: AppTreeNode
  fullName: SMACD.AppTree.AppTreeNode
- uid: SMACD.AppTree
  commentId: N:SMACD.AppTree
  name: SMACD.AppTree
  nameWithType: SMACD.AppTree
  fullName: SMACD.AppTree
