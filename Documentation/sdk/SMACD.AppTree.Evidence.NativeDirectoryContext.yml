### YamlMime:ManagedReference
items:
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext
  commentId: T:SMACD.AppTree.Evidence.NativeDirectoryContext
  id: NativeDirectoryContext
  parent: SMACD.AppTree.Evidence
  children:
  - SMACD.AppTree.Evidence.NativeDirectoryContext.Directory
  - SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile(System.String)
  - SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose
  - SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose(System.Boolean)
  - SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize
  langs:
  - csharp
  - vb
  name: NativeDirectoryContext
  nameWithType: NativeDirectoryContext
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext
  type: Class
  source:
    remote:
      path: SMACD.AppTree/Evidence/NativeDirectoryContext.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: NativeDirectoryContext
    path: ../SMACD.AppTree/Evidence/NativeDirectoryContext.cs
    startLine: 9
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree.Evidence
  summary: "\nContext which allocates and destroys a temporary directory to collect files for a NativeDirectoryEvidence\n"
  example: []
  syntax:
    content: 'public class NativeDirectoryContext : IDisposable'
    content.vb: >-
      Public Class NativeDirectoryContext
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Directory
  commentId: P:SMACD.AppTree.Evidence.NativeDirectoryContext.Directory
  id: Directory
  parent: SMACD.AppTree.Evidence.NativeDirectoryContext
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: NativeDirectoryContext.Directory
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Directory
  type: Property
  source:
    remote:
      path: SMACD.AppTree/Evidence/NativeDirectoryContext.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Directory
    path: ../SMACD.AppTree/Evidence/NativeDirectoryContext.cs
    startLine: 43
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree.Evidence
  summary: "\nDirectory path allocated by this Context to store files and directories\nin; contents will be compressed in full upon Context disposal\n"
  example: []
  syntax:
    content: public string Directory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Directory As String
  overload: SMACD.AppTree.Evidence.NativeDirectoryContext.Directory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile(System.String)
  commentId: M:SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile(System.String)
  id: DirectoryWithFile(System.String)
  parent: SMACD.AppTree.Evidence.NativeDirectoryContext
  langs:
  - csharp
  - vb
  name: DirectoryWithFile(String)
  nameWithType: NativeDirectoryContext.DirectoryWithFile(String)
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile(System.String)
  type: Method
  source:
    remote:
      path: SMACD.AppTree/Evidence/NativeDirectoryContext.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: DirectoryWithFile
    path: ../SMACD.AppTree/Evidence/NativeDirectoryContext.cs
    startLine: 52
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree.Evidence
  summary: "\nDirectory path and a filename concatenated together\n"
  example: []
  syntax:
    content: public string DirectoryWithFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: File name
    return:
      type: System.String
      description: ''
    content.vb: Public Function DirectoryWithFile(fileName As String) As String
  overload: SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose(System.Boolean)
  commentId: M:SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: SMACD.AppTree.Evidence.NativeDirectoryContext
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: NativeDirectoryContext.Dispose(Boolean)
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: SMACD.AppTree/Evidence/NativeDirectoryContext.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Dispose
    path: ../SMACD.AppTree/Evidence/NativeDirectoryContext.cs
    startLine: 65
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree.Evidence
  summary: "\nDispose of context\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Currently disposing?
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize
  commentId: M:SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize
  id: Finalize
  parent: SMACD.AppTree.Evidence.NativeDirectoryContext
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: NativeDirectoryContext.Finalize()
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize()
  type: Method
  source:
    remote:
      path: SMACD.AppTree/Evidence/NativeDirectoryContext.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Finalize
    path: ../SMACD.AppTree/Evidence/NativeDirectoryContext.cs
    startLine: 82
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree.Evidence
  summary: "\nDestructor to dispose\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose
  commentId: M:SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose
  id: Dispose
  parent: SMACD.AppTree.Evidence.NativeDirectoryContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NativeDirectoryContext.Dispose()
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose()
  type: Method
  source:
    remote:
      path: SMACD.AppTree/Evidence/NativeDirectoryContext.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Dispose
    path: ../SMACD.AppTree/Evidence/NativeDirectoryContext.cs
    startLine: 90
  assemblies:
  - SMACD.AppTree
  namespace: SMACD.AppTree.Evidence
  summary: "\nDispose of context\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SMACD.AppTree.Evidence
  commentId: N:SMACD.AppTree.Evidence
  name: SMACD.AppTree.Evidence
  nameWithType: SMACD.AppTree.Evidence
  fullName: SMACD.AppTree.Evidence
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Directory*
  commentId: Overload:SMACD.AppTree.Evidence.NativeDirectoryContext.Directory
  name: Directory
  nameWithType: NativeDirectoryContext.Directory
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Directory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile*
  commentId: Overload:SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile
  name: DirectoryWithFile
  nameWithType: NativeDirectoryContext.DirectoryWithFile
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.DirectoryWithFile
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose*
  commentId: Overload:SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose
  name: Dispose
  nameWithType: NativeDirectoryContext.Dispose
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize*
  commentId: Overload:SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize
  name: Finalize
  nameWithType: NativeDirectoryContext.Finalize
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext.Finalize
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
