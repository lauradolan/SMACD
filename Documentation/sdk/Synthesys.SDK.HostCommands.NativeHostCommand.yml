### YamlMime:ManagedReference
items:
- uid: Synthesys.SDK.HostCommands.NativeHostCommand
  commentId: T:Synthesys.SDK.HostCommands.NativeHostCommand
  id: NativeHostCommand
  parent: Synthesys.SDK.HostCommands
  children:
  - Synthesys.SDK.HostCommands.NativeHostCommand.#ctor(System.String,System.String[])
  - Synthesys.SDK.HostCommands.NativeHostCommand.Dispose
  - Synthesys.SDK.HostCommands.NativeHostCommand.Dispose(System.Boolean)
  - Synthesys.SDK.HostCommands.NativeHostCommand.Process
  - Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo
  - Synthesys.SDK.HostCommands.NativeHostCommand.Start
  - Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists
  langs:
  - csharp
  - vb
  name: NativeHostCommand
  nameWithType: NativeHostCommand
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand
  type: Class
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: NativeHostCommand
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 12
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a command on the host\n"
  example: []
  syntax:
    content: 'public class NativeHostCommand : HostCommand, IDisposable'
    content.vb: >-
      Public Class NativeHostCommand

          Inherits HostCommand

          Implements IDisposable
  inheritance:
  - System.Object
  - Synthesys.SDK.HostCommands.HostCommand
  implements:
  - System.IDisposable
  inheritedMembers:
  - Synthesys.SDK.HostCommands.HostCommand.Maps
  - Synthesys.SDK.HostCommands.HostCommand.Logger
  - Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
  - Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
  - Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
  - Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
  - Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
  - Synthesys.SDK.HostCommands.HostCommand.StdOut
  - Synthesys.SDK.HostCommands.HostCommand.StdErr
  - Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
  - Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
  - Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
  - Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  - Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.#ctor(System.String,System.String[])
  commentId: M:Synthesys.SDK.HostCommands.NativeHostCommand.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: NativeHostCommand(String, String[])
  nameWithType: NativeHostCommand.NativeHostCommand(String, String[])
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.NativeHostCommand(System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 19
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a command on the host\n"
  example: []
  syntax:
    content: public NativeHostCommand(string command, params string[] args)
    parameters:
    - id: command
      type: System.String
      description: Command to execute
    - id: args
      type: System.String[]
      description: Arguments for command
    content.vb: Public Sub New(command As String, ParamArray args As String())
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.#ctor*
  nameWithType.vb: NativeHostCommand.NativeHostCommand(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Synthesys.SDK.HostCommands.NativeHostCommand.NativeHostCommand(System.String, System.String())
  name.vb: NativeHostCommand(String, String())
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo
  commentId: P:Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo
  id: ProcessStartInfo
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: ProcessStartInfo
  nameWithType: NativeHostCommand.ProcessStartInfo
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ProcessStartInfo
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 38
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nProcess start information\n"
  example: []
  syntax:
    content: protected ProcessStartInfo ProcessStartInfo { get; set; }
    parameters: []
    return:
      type: System.Diagnostics.ProcessStartInfo
    content.vb: Protected Property ProcessStartInfo As ProcessStartInfo
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Process
  commentId: P:Synthesys.SDK.HostCommands.NativeHostCommand.Process
  id: Process
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: Process
  nameWithType: NativeHostCommand.Process
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Process
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Process
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 43
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nProcess wrapping the native host command\n"
  example: []
  syntax:
    content: protected Process Process { get; set; }
    parameters: []
    return:
      type: System.Diagnostics.Process
    content.vb: Protected Property Process As Process
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.Process*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists
  commentId: M:Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists
  id: ValidateCommandExists
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: ValidateCommandExists()
  nameWithType: NativeHostCommand.ValidateCommandExists()
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists()
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ValidateCommandExists
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 49
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nValidate that the command exists on the host\n"
  example: []
  syntax:
    content: public bool ValidateCommandExists()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ValidateCommandExists As Boolean
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Start
  commentId: M:Synthesys.SDK.HostCommands.NativeHostCommand.Start
  id: Start
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: NativeHostCommand.Start()
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Start()
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Start
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 70
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nExecute the command, wrapped by a Task\n"
  example: []
  syntax:
    content: public Task Start()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Start As Task
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose(System.Boolean)
  commentId: M:Synthesys.SDK.HostCommands.NativeHostCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: NativeHostCommand.Dispose(Boolean)
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Dispose
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 145
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nDestructor to dispose\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Currently disposing?
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose
  commentId: M:Synthesys.SDK.HostCommands.NativeHostCommand.Dispose
  id: Dispose
  parent: Synthesys.SDK.HostCommands.NativeHostCommand
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NativeHostCommand.Dispose()
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose()
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/NativeHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Dispose
    path: ../Synthesys.SDK/HostCommands/NativeHostCommand.cs
    startLine: 164
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nDestructor to dispose\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Synthesys.SDK.HostCommands
  commentId: N:Synthesys.SDK.HostCommands
  name: Synthesys.SDK.HostCommands
  nameWithType: Synthesys.SDK.HostCommands
  fullName: Synthesys.SDK.HostCommands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Synthesys.SDK.HostCommands.HostCommand
  commentId: T:Synthesys.SDK.HostCommands.HostCommand
  parent: Synthesys.SDK.HostCommands
  name: HostCommand
  nameWithType: HostCommand
  fullName: Synthesys.SDK.HostCommands.HostCommand
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Synthesys.SDK.HostCommands.HostCommand.Maps
  commentId: F:Synthesys.SDK.HostCommands.HostCommand.Maps
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: Maps
  nameWithType: HostCommand.Maps
  fullName: Synthesys.SDK.HostCommands.HostCommand.Maps
- uid: Synthesys.SDK.HostCommands.HostCommand.Logger
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.Logger
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: Logger
  nameWithType: HostCommand.Logger
  fullName: Synthesys.SDK.HostCommands.HostCommand.Logger
- uid: Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: OwnerTaskId
  nameWithType: HostCommand.OwnerTaskId
  fullName: Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
- uid: Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: RuntimeTask
  nameWithType: HostCommand.RuntimeTask
  fullName: Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
- uid: Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: ExecutionTime
  nameWithType: HostCommand.ExecutionTime
  fullName: Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
- uid: Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: CaptureStdOut
  nameWithType: HostCommand.CaptureStdOut
  fullName: Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
- uid: Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: CaptureStdErr
  nameWithType: HostCommand.CaptureStdErr
  fullName: Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
- uid: Synthesys.SDK.HostCommands.HostCommand.StdOut
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.StdOut
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StdOut
  nameWithType: HostCommand.StdOut
  fullName: Synthesys.SDK.HostCommands.HostCommand.StdOut
- uid: Synthesys.SDK.HostCommands.HostCommand.StdErr
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.StdErr
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StdErr
  nameWithType: HostCommand.StdErr
  fullName: Synthesys.SDK.HostCommands.HostCommand.StdErr
- uid: Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: FailedToExecute
  nameWithType: HostCommand.FailedToExecute
  fullName: Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
- uid: Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
  commentId: E:Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StandardOutputDataReceived
  nameWithType: HostCommand.StandardOutputDataReceived
  fullName: Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
- uid: Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
  commentId: E:Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StandardErrorDataReceived
  nameWithType: HostCommand.StandardErrorDataReceived
  fullName: Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
- uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  commentId: M:Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  parent: Synthesys.SDK.HostCommands.HostCommand
  isExternal: true
  name: HandleStdOut(String)
  nameWithType: HostCommand.HandleStdOut(String)
  fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
    name: HandleStdOut
    nameWithType: HostCommand.HandleStdOut
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
    name: HandleStdOut
    nameWithType: HostCommand.HandleStdOut
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  commentId: M:Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  parent: Synthesys.SDK.HostCommands.HostCommand
  isExternal: true
  name: HandleStdErr(String)
  nameWithType: HostCommand.HandleStdErr(String)
  fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
    name: HandleStdErr
    nameWithType: HostCommand.HandleStdErr
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
    name: HandleStdErr
    nameWithType: HostCommand.HandleStdErr
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.#ctor*
  commentId: Overload:Synthesys.SDK.HostCommands.NativeHostCommand.#ctor
  name: NativeHostCommand
  nameWithType: NativeHostCommand.NativeHostCommand
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.NativeHostCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo*
  commentId: Overload:Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo
  name: ProcessStartInfo
  nameWithType: NativeHostCommand.ProcessStartInfo
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.ProcessStartInfo
- uid: System.Diagnostics.ProcessStartInfo
  commentId: T:System.Diagnostics.ProcessStartInfo
  parent: System.Diagnostics
  isExternal: true
  name: ProcessStartInfo
  nameWithType: ProcessStartInfo
  fullName: System.Diagnostics.ProcessStartInfo
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Process*
  commentId: Overload:Synthesys.SDK.HostCommands.NativeHostCommand.Process
  name: Process
  nameWithType: NativeHostCommand.Process
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Process
- uid: System.Diagnostics.Process
  commentId: T:System.Diagnostics.Process
  parent: System.Diagnostics
  isExternal: true
  name: Process
  nameWithType: Process
  fullName: System.Diagnostics.Process
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists*
  commentId: Overload:Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists
  name: ValidateCommandExists
  nameWithType: NativeHostCommand.ValidateCommandExists
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.ValidateCommandExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Start*
  commentId: Overload:Synthesys.SDK.HostCommands.NativeHostCommand.Start
  name: Start
  nameWithType: NativeHostCommand.Start
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Start
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose*
  commentId: Overload:Synthesys.SDK.HostCommands.NativeHostCommand.Dispose
  name: Dispose
  nameWithType: NativeHostCommand.Dispose
  fullName: Synthesys.SDK.HostCommands.NativeHostCommand.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
