### YamlMime:ManagedReference
items:
- uid: Synthesys.SDK.HostCommands.DockerHostCommand
  commentId: T:Synthesys.SDK.HostCommands.DockerHostCommand
  id: DockerHostCommand
  parent: Synthesys.SDK.HostCommands
  children:
  - Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(Docker.DotNet.Models.CreateContainerParameters)
  - Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,SMACD.AppTree.Evidence.NativeDirectoryContext,System.String[])
  - Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount},System.String)
  - Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,System.String[])
  - Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId
  - Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters
  - Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory
  - Synthesys.SDK.HostCommands.DockerHostCommand.Dispose
  - Synthesys.SDK.HostCommands.DockerHostCommand.Dispose(System.Boolean)
  - Synthesys.SDK.HostCommands.DockerHostCommand.Start
  - Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker
  langs:
  - csharp
  - vb
  name: DockerHostCommand
  nameWithType: DockerHostCommand
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand
  type: Class
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: DockerHostCommand
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 60
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a Docker container\n"
  example: []
  syntax:
    content: 'public class DockerHostCommand : HostCommand, IDisposable'
    content.vb: >-
      Public Class DockerHostCommand

          Inherits HostCommand

          Implements IDisposable
  inheritance:
  - System.Object
  - Synthesys.SDK.HostCommands.HostCommand
  implements:
  - System.IDisposable
  inheritedMembers:
  - Synthesys.SDK.HostCommands.HostCommand.Maps
  - Synthesys.SDK.HostCommands.HostCommand.Logger
  - Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
  - Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
  - Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
  - Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
  - Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
  - Synthesys.SDK.HostCommands.HostCommand.StdOut
  - Synthesys.SDK.HostCommands.HostCommand.StdErr
  - Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
  - Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
  - Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
  - Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  - Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker
  id: SupportsDocker
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: SupportsDocker()
  nameWithType: DockerHostCommand.SupportsDocker()
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker()
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: SupportsDocker
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 69
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nIf the platform is running an accessible Docker daemon\n"
  example: []
  syntax:
    content: public static bool SupportsDocker()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function SupportsDocker As Boolean
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount},System.String)
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount},System.String)
  id: '#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount},System.String)'
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: DockerHostCommand(String, List<String>, IEnumerable<DockerHostMount>, String)
  nameWithType: DockerHostCommand.DockerHostCommand(String, List<String>, IEnumerable<DockerHostMount>, String)
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(System.String, System.Collections.Generic.List<System.String>, System.Collections.Generic.IEnumerable<Synthesys.SDK.HostCommands.DockerHostMount>, System.String)
  type: Constructor
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 96
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a Docker container\n"
  example: []
  syntax:
    content: public DockerHostCommand(string image, List<string> command, IEnumerable<DockerHostMount> mounts, string user)
    parameters:
    - id: image
      type: System.String
      description: Image name
    - id: command
      type: System.Collections.Generic.List{System.String}
      description: Command and arguments to execute
    - id: mounts
      type: System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount}
      description: Mounts for container
    - id: user
      type: System.String
      description: User to execute container as
    content.vb: Public Sub New(image As String, command As List(Of String), mounts As IEnumerable(Of DockerHostMount), user As String)
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor*
  nameWithType.vb: DockerHostCommand.DockerHostCommand(String, List(Of String), IEnumerable(Of DockerHostMount), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(System.String, System.Collections.Generic.List(Of System.String), System.Collections.Generic.IEnumerable(Of Synthesys.SDK.HostCommands.DockerHostMount), System.String)
  name.vb: DockerHostCommand(String, List(Of String), IEnumerable(Of DockerHostMount), String)
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,SMACD.AppTree.Evidence.NativeDirectoryContext,System.String[])
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,SMACD.AppTree.Evidence.NativeDirectoryContext,System.String[])
  id: '#ctor(System.String,SMACD.AppTree.Evidence.NativeDirectoryContext,System.String[])'
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: DockerHostCommand(String, NativeDirectoryContext, String[])
  nameWithType: DockerHostCommand.DockerHostCommand(String, NativeDirectoryContext, String[])
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(System.String, SMACD.AppTree.Evidence.NativeDirectoryContext, System.String[])
  type: Constructor
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 124
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a Docker container\n\nA context will be mounted at /synthesys inside the container\n"
  example: []
  syntax:
    content: public DockerHostCommand(string image, NativeDirectoryContext context, params string[] command)
    parameters:
    - id: image
      type: System.String
      description: Image name
    - id: context
      type: SMACD.AppTree.Evidence.NativeDirectoryContext
      description: Context to attach to Docker container
    - id: command
      type: System.String[]
      description: Command and arguments to execute
    content.vb: Public Sub New(image As String, context As NativeDirectoryContext, ParamArray command As String())
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor*
  nameWithType.vb: DockerHostCommand.DockerHostCommand(String, NativeDirectoryContext, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(System.String, SMACD.AppTree.Evidence.NativeDirectoryContext, System.String())
  name.vb: DockerHostCommand(String, NativeDirectoryContext, String())
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,System.String[])
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: DockerHostCommand(String, String[])
  nameWithType: DockerHostCommand.DockerHostCommand(String, String[])
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 148
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a Docker container\n"
  example: []
  syntax:
    content: public DockerHostCommand(string image, params string[] command)
    parameters:
    - id: image
      type: System.String
      description: Image name
    - id: command
      type: System.String[]
      description: Command and arguments to execute
    content.vb: Public Sub New(image As String, ParamArray command As String())
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor*
  nameWithType.vb: DockerHostCommand.DockerHostCommand(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(System.String, System.String())
  name.vb: DockerHostCommand(String, String())
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory
  commentId: P:Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory
  id: ContainerWorkingDirectory
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: ContainerWorkingDirectory
  nameWithType: DockerHostCommand.ContainerWorkingDirectory
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ContainerWorkingDirectory
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 163
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nContainer Working Directory\n"
  example: []
  syntax:
    content: public string ContainerWorkingDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContainerWorkingDirectory As String
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(Docker.DotNet.Models.CreateContainerParameters)
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.#ctor(Docker.DotNet.Models.CreateContainerParameters)
  id: '#ctor(Docker.DotNet.Models.CreateContainerParameters)'
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: DockerHostCommand(CreateContainerParameters)
  nameWithType: DockerHostCommand.DockerHostCommand(CreateContainerParameters)
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand(Docker.DotNet.Models.CreateContainerParameters)
  type: Constructor
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: .ctor
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 169
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nRepresents a command run to execute a Docker container\n"
  example: []
  syntax:
    content: public DockerHostCommand(CreateContainerParameters containerParameters)
    parameters:
    - id: containerParameters
      type: Docker.DotNet.Models.CreateContainerParameters
      description: Container parameters for new container
    content.vb: Public Sub New(containerParameters As CreateContainerParameters)
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters
  commentId: P:Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters
  id: ContainerParameters
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: ContainerParameters
  nameWithType: DockerHostCommand.ContainerParameters
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ContainerParameters
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 177
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nParameters to be used during the creation of the Docker container\n"
  example: []
  syntax:
    content: public CreateContainerParameters ContainerParameters { get; }
    parameters: []
    return:
      type: Docker.DotNet.Models.CreateContainerParameters
    content.vb: Public ReadOnly Property ContainerParameters As CreateContainerParameters
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId
  commentId: P:Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId
  id: ContainerId
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: ContainerId
  nameWithType: DockerHostCommand.ContainerId
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId
  type: Property
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: ContainerId
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 182
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nContainer identifier name\n"
  example: []
  syntax:
    content: public string ContainerId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContainerId As String
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.Start
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.Start
  id: Start
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: DockerHostCommand.Start()
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.Start()
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Start
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 188
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nStart container task\n"
  example: []
  syntax:
    content: public Task Start()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Start As Task
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose(System.Boolean)
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DockerHostCommand.Dispose(Boolean)
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Dispose
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 364
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nDestructor to dispose\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Currently disposing?
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose
  commentId: M:Synthesys.SDK.HostCommands.DockerHostCommand.Dispose
  id: Dispose
  parent: Synthesys.SDK.HostCommands.DockerHostCommand
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DockerHostCommand.Dispose()
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose()
  type: Method
  source:
    remote:
      path: Synthesys.SDK/HostCommands/DockerHostCommand.cs
      branch: reactions
      repo: https://github.com/anthturner/SMACD.git
    id: Dispose
    path: ../Synthesys.SDK/HostCommands/DockerHostCommand.cs
    startLine: 380
  assemblies:
  - Synthesys.SDK
  namespace: Synthesys.SDK.HostCommands
  summary: "\nDestructor to dispose\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Synthesys.SDK.HostCommands
  commentId: N:Synthesys.SDK.HostCommands
  name: Synthesys.SDK.HostCommands
  nameWithType: Synthesys.SDK.HostCommands
  fullName: Synthesys.SDK.HostCommands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Synthesys.SDK.HostCommands.HostCommand
  commentId: T:Synthesys.SDK.HostCommands.HostCommand
  parent: Synthesys.SDK.HostCommands
  name: HostCommand
  nameWithType: HostCommand
  fullName: Synthesys.SDK.HostCommands.HostCommand
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Synthesys.SDK.HostCommands.HostCommand.Maps
  commentId: F:Synthesys.SDK.HostCommands.HostCommand.Maps
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: Maps
  nameWithType: HostCommand.Maps
  fullName: Synthesys.SDK.HostCommands.HostCommand.Maps
- uid: Synthesys.SDK.HostCommands.HostCommand.Logger
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.Logger
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: Logger
  nameWithType: HostCommand.Logger
  fullName: Synthesys.SDK.HostCommands.HostCommand.Logger
- uid: Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: OwnerTaskId
  nameWithType: HostCommand.OwnerTaskId
  fullName: Synthesys.SDK.HostCommands.HostCommand.OwnerTaskId
- uid: Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: RuntimeTask
  nameWithType: HostCommand.RuntimeTask
  fullName: Synthesys.SDK.HostCommands.HostCommand.RuntimeTask
- uid: Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: ExecutionTime
  nameWithType: HostCommand.ExecutionTime
  fullName: Synthesys.SDK.HostCommands.HostCommand.ExecutionTime
- uid: Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: CaptureStdOut
  nameWithType: HostCommand.CaptureStdOut
  fullName: Synthesys.SDK.HostCommands.HostCommand.CaptureStdOut
- uid: Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: CaptureStdErr
  nameWithType: HostCommand.CaptureStdErr
  fullName: Synthesys.SDK.HostCommands.HostCommand.CaptureStdErr
- uid: Synthesys.SDK.HostCommands.HostCommand.StdOut
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.StdOut
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StdOut
  nameWithType: HostCommand.StdOut
  fullName: Synthesys.SDK.HostCommands.HostCommand.StdOut
- uid: Synthesys.SDK.HostCommands.HostCommand.StdErr
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.StdErr
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StdErr
  nameWithType: HostCommand.StdErr
  fullName: Synthesys.SDK.HostCommands.HostCommand.StdErr
- uid: Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
  commentId: P:Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: FailedToExecute
  nameWithType: HostCommand.FailedToExecute
  fullName: Synthesys.SDK.HostCommands.HostCommand.FailedToExecute
- uid: Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
  commentId: E:Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StandardOutputDataReceived
  nameWithType: HostCommand.StandardOutputDataReceived
  fullName: Synthesys.SDK.HostCommands.HostCommand.StandardOutputDataReceived
- uid: Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
  commentId: E:Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
  parent: Synthesys.SDK.HostCommands.HostCommand
  name: StandardErrorDataReceived
  nameWithType: HostCommand.StandardErrorDataReceived
  fullName: Synthesys.SDK.HostCommands.HostCommand.StandardErrorDataReceived
- uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  commentId: M:Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  parent: Synthesys.SDK.HostCommands.HostCommand
  isExternal: true
  name: HandleStdOut(String)
  nameWithType: HostCommand.HandleStdOut(String)
  fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
    name: HandleStdOut
    nameWithType: HostCommand.HandleStdOut
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut(System.String)
    name: HandleStdOut
    nameWithType: HostCommand.HandleStdOut
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdOut
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  commentId: M:Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  parent: Synthesys.SDK.HostCommands.HostCommand
  isExternal: true
  name: HandleStdErr(String)
  nameWithType: HostCommand.HandleStdErr(String)
  fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
  spec.csharp:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
    name: HandleStdErr
    nameWithType: HostCommand.HandleStdErr
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr(System.String)
    name: HandleStdErr
    nameWithType: HostCommand.HandleStdErr
    fullName: Synthesys.SDK.HostCommands.HostCommand.HandleStdErr
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker
  name: SupportsDocker
  nameWithType: DockerHostCommand.SupportsDocker
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.SupportsDocker
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.#ctor*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.#ctor
  name: DockerHostCommand
  nameWithType: DockerHostCommand.DockerHostCommand
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.DockerHostCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount}
  commentId: T:System.Collections.Generic.IEnumerable{Synthesys.SDK.HostCommands.DockerHostMount}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DockerHostMount>
  nameWithType: IEnumerable<DockerHostMount>
  fullName: System.Collections.Generic.IEnumerable<Synthesys.SDK.HostCommands.DockerHostMount>
  nameWithType.vb: IEnumerable(Of DockerHostMount)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Synthesys.SDK.HostCommands.DockerHostMount)
  name.vb: IEnumerable(Of DockerHostMount)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Synthesys.SDK.HostCommands.DockerHostMount
    name: DockerHostMount
    nameWithType: DockerHostMount
    fullName: Synthesys.SDK.HostCommands.DockerHostMount
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Synthesys.SDK.HostCommands.DockerHostMount
    name: DockerHostMount
    nameWithType: DockerHostMount
    fullName: Synthesys.SDK.HostCommands.DockerHostMount
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SMACD.AppTree.Evidence.NativeDirectoryContext
  commentId: T:SMACD.AppTree.Evidence.NativeDirectoryContext
  parent: SMACD.AppTree.Evidence
  name: NativeDirectoryContext
  nameWithType: NativeDirectoryContext
  fullName: SMACD.AppTree.Evidence.NativeDirectoryContext
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SMACD.AppTree.Evidence
  commentId: N:SMACD.AppTree.Evidence
  name: SMACD.AppTree.Evidence
  nameWithType: SMACD.AppTree.Evidence
  fullName: SMACD.AppTree.Evidence
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory
  name: ContainerWorkingDirectory
  nameWithType: DockerHostCommand.ContainerWorkingDirectory
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerWorkingDirectory
- uid: Docker.DotNet.Models.CreateContainerParameters
  commentId: T:Docker.DotNet.Models.CreateContainerParameters
  parent: Docker.DotNet.Models
  isExternal: true
  name: CreateContainerParameters
  nameWithType: CreateContainerParameters
  fullName: Docker.DotNet.Models.CreateContainerParameters
- uid: Docker.DotNet.Models
  commentId: N:Docker.DotNet.Models
  isExternal: true
  name: Docker.DotNet.Models
  nameWithType: Docker.DotNet.Models
  fullName: Docker.DotNet.Models
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters
  name: ContainerParameters
  nameWithType: DockerHostCommand.ContainerParameters
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerParameters
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId
  name: ContainerId
  nameWithType: DockerHostCommand.ContainerId
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.ContainerId
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.Start*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.Start
  name: Start
  nameWithType: DockerHostCommand.Start
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.Start
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose*
  commentId: Overload:Synthesys.SDK.HostCommands.DockerHostCommand.Dispose
  name: Dispose
  nameWithType: DockerHostCommand.Dispose
  fullName: Synthesys.SDK.HostCommands.DockerHostCommand.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
