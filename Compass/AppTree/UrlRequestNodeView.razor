<div class="d-sm-flex justify-content-between align-items-center mb-4">
    <h3 class="text-dark mb-0">URL Request - @UrlRequestArtifact.GetEntireUrl()</h3><i class="fas da-2x fa-globe"></i>
</div>

@if (!string.IsNullOrEmpty(Metadata.ResultHtml))
{
<div class="row">
    <div class="col">
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="text-primary font-weight-bold m-0">Result HTML</h6>
            </div>
            <div class="card-body">
                <pre>
                    <code class="language-html">
                        @Metadata.ResultHtml
                    </code>
                </pre>
            </div>
        </div>
    </div>
</div>
}

@if (Fields.Any())
{
<div class="row">
    <div class="col">
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="text-primary font-weight-bold m-0">Data Fields</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <DataGrid TItem="KeyValueObject"
                              Data="@Fields">
                        <DataGridColumn TItem="KeyValueObject" Field="@nameof(KeyValueObject.Key)" Caption="Key" AllowSort="true" />
                        <DataGridColumn TItem="KeyValueObject" Field="@nameof(KeyValueObject.Value)" Caption="Value" AllowSort="false" />
                    </DataGrid>
                </div>
            </div>
        </div>
    </div>
</div>
}

@if (Headers.Any())
{
<div class="row">
    <div class="col">
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="text-primary font-weight-bold m-0">Headers</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <DataGrid TItem="KeyValueObject"
                              Data="@Headers">
                        <DataGridColumn TItem="KeyValueObject" Field="@nameof(KeyValueObject.Key)" Caption="Header" AllowSort="true" />
                        <DataGridColumn TItem="KeyValueObject" Field="@nameof(KeyValueObject.Value)" Caption="Value" AllowSort="false" />
                    </DataGrid>
                </div>
            </div>
        </div>
    </div>
</div>
}

<div class="row">
    <div class="col">
        <Compass.Components.VulnerabilityViewer Vulnerabilities="@UrlRequestArtifact.Vulnerabilities" />
    </div>
</div>

<div class="row">
    <div class="col">
        <Compass.Components.EvidenceSummaryViewer Node="@Artifact" />
    </div>
</div>

@using Blazorise.DataGrid
@using SMACD.AppTree;
@using SMACD.AppTree.Details
@code
{
    [Parameter]
    public AppTreeNode Artifact { get; set; }
    public UrlRequestNode UrlRequestArtifact => Artifact as UrlRequestNode;
    public UrlRequestDetails Metadata => UrlRequestArtifact?.Detail;

    public List<KeyValueObject> Fields => UrlRequestArtifact.Fields.Where(f => !string.IsNullOrEmpty(f.Key)).Select(f => new KeyValueObject() { Key = f.Key, Value = f.Value }).ToList();
    public List<KeyValueObject> Headers => UrlRequestArtifact.Headers.Where(f => !string.IsNullOrEmpty(f.Key)).Select(f => new KeyValueObject() { Key = f.Key, Value = f.Value }).ToList();

    public class KeyValueObject
    {
        public string Key { get; set; }
        public string Value { get; set; }
    }
}