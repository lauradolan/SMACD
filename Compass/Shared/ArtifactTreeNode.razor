@using SMACD.Artifacts
    <li>
        <span>
            @if (Artifact.Children.Any() && IsExpanded)
            {
                <i @onclick="SwitchExpansion" class="fa fa-minus text-light" style="margin-right: 0.5em;"></i>
            }
            else if (Artifact.Children.Any())
            {
                <i @onclick="SwitchExpansion" class="fa fa-plus text-light" style="margin-right: 0.5em;"></i>
            }
            else
            {
                <i class="fa fa-puzzle-piece text-info" style="margin-right: 0.5em;"></i>
            }
            <a class="text-light" href="javascript:void(0)" @onclick="(() => IdentifierClicked.InvokeAsync(Artifact))">
            @Artifact.Identifier
            </a>
            <span class="text-right d-inline float-right">
                (<span class="text-info">@Artifact.Vulnerabilities.Count<i class="fa fa-bug"></i></span>&nbsp;<span class="text-warning">@Artifact.Children.Sum(v => Program.GetAllVulnerabilitiesIn(v).Count)<i class="fa fa-sort-down"></i></span>)
            </span>
        </span>
        @if (Artifact.Children.Any() && IsExpanded)
            {
            <ul>
                @foreach (var child in Artifact.Children)
            {
                    <ArtifactTreeNode Artifact="@child" IdentifierClicked="@IdentifierClicked" />
            }
            </ul>
            }
    </li>

@functions {

    [Parameter]
    public Artifact Artifact { get; set; }

    [Parameter]
    public EventCallback<Artifact> IdentifierClicked { get; set; }

    [Parameter]
    public bool IsExpanded { get; set; } = false;

    public void SwitchExpansion()
    {
        IsExpanded = !IsExpanded;
    }
}
