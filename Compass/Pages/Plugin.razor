@using System.Reflection
@using Synthesys
@using Synthesys.SDK.Attributes
@using Synthesys.SDK.Extensions
@code
{
    [Parameter]
    public string ExtensionIdentifier { get; set; }

    public ExtensionAttribute ExtensionModel => ExtensionToolbox.Instance.GetExtensionMetadata(ExtensionIdentifier);
}

@{
    var action = ExtensionToolbox.Instance.EmitAction(ExtensionIdentifier);
    var triggers = action.GetType().GetCustomAttributes<TriggeredByAttribute>().ToList();
}

<div class="card m-3">
    <div class="card-body p-3">
        <h5 class="card-title"><span class="text-secondary border rounded-0 border-info p-1 m-1" style="font-family: Aldrich, sans-serif;">@ExtensionIdentifier</span>@ExtensionModel.Name (@ExtensionModel.VersionObj.ToString(2))<small class="ml-2">by @ExtensionModel.Author<br></small></h5>

        @if (triggers.Any())
        {
            <h6 class="card-title p-1" style="font-family: Aldrich, sans-serif;">
                @string.Join("<br />", triggers.Select(t => t.Trigger))
            </h6>
        }
        <p class="card-text">@ExtensionModel.Description</p>
        @if (!string.IsNullOrEmpty(ExtensionModel.Website))
        {
            <a class="btn btn-primary" role="button" style="color: #ffffff;" target="_blank" href="@ExtensionModel.Website">More Information</a>
        }
    </div>
</div>