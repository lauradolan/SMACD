@if (Vulnerabilities != null && Vulnerabilities.Any())
{
<div class="card shadow mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h6 class="text-primary font-weight-bold m-0">Vulnerabilities Identified</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <DataGrid TItem="Vulnerability"
                      Data="@Vulnerabilities"
                      @bind-SelectedRow="@SelectedVulnerability">
                <DataGridCommandColumn TItem="Vulnerability" />
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.Title)" Caption="Title" AllowSort="true" />
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.Description)" Caption="Description" AllowSort="false">
                    <DisplayTemplate>
                        @EmitHtml((context as Vulnerability).Description)
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.AdditionalInformation)" Caption="Additional Info" AllowSort="false">
                    <DisplayTemplate>
                        @EmitHtml((context as Vulnerability).AdditionalInformation)
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.Occurrences)" Caption="Occurrences" AllowSort="true" />
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.Confidence)" Caption="Confidence" AllowSort="true" />
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.RiskLevel)" Caption="Risk Level" AllowSort="true" />
                <DataGridColumn TItem="Vulnerability" Field="@nameof(Vulnerability.Remedy)" Caption="Remedy" AllowSort="false">
                    <DisplayTemplate>
                        @EmitHtml((context as Vulnerability).Remedy)
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGrid>
        </div>
    </div>
</div>
}

@code {
    [Parameter]
    public IEnumerable<Vulnerability> Vulnerabilities { get; set; }

    public Vulnerability SelectedVulnerability { get; set; }

    public RenderFragment EmitHtml(string html) => builder =>
    {
        builder.AddMarkupContent(0, html);
    };
}