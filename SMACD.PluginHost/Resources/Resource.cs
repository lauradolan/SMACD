using System.Collections.Generic;

namespace SMACD.PluginHost.Resources
{
    /// <summary>
    ///     Represents a Resource resolved to its handler
    /// </summary>
    public abstract class Resource
    {
        protected Resource()
        {
            SystemCreated = true;
        }

        protected Resource(string resourceId)
        {
            ResourceId = resourceId;
        }

        /// <summary>
        ///     Resource identifier
        /// </summary>
        public string ResourceId { get; set; }

        /// <summary>
        ///     If the Resource was generated by the system
        /// </summary>
        public bool SystemCreated { get; set; }

        /// <summary>
        /// Instances of the Resource base
        /// </summary>
        public IList<Resource> Instances { get; } = new List<Resource>();

        /// <summary>
        ///     Retrieve a string that represents the target of this resource
        /// </summary>
        /// <returns></returns>
        public abstract string GetDescription();

        /// <summary>
        /// If the given Resource is approximately this Resource.
        /// For example, in an HttpResource, this would validate that the URL matched
        ///   the given Resource's URL, but ignore comparing Headers or Fields.
        /// </summary>
        /// <param name="resource">Resource to compare against</param>
        /// <returns></returns>
        public abstract bool IsApproximateTo(Resource resource);
    }
}