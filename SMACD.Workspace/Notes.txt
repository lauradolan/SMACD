Types of entities:
- Actions
-- Producers
-- Consumers
-- Deciders
- Artifacts
-- NativeDirectoryArtifact
--- NativeDirectoryContext
-- ObjectArtifact
-- StringArtifact
- Customizations
- Libraries
- Options
- Services
- Targets
- Tasks
- Triggers
- Workspaces
- Workspace Toolboxes
-- ActionToolbox
-- LibraryToolbox
-- ServiceToolbox
-- TargetToolbox
-- TaskToolbox
-- TriggerToolbox


*** NOTE: When using the term "triggered" in this document, it is referring to the addition 
          of the Action to the *end* of the Task queue

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

Actions:
- Can be triggered by the creation of an Artifact or the execution of an Action
- Can also be run by adding to queue manually
- Are either Producers, Consumers, or Deciders

Producer Actions:
- Run tooling and produce artifacts

Consumer Actions:
- Ingest artifacts and create new artifacts and/or reports

Decider Actions:
- Ingest artifacts and trigger other Actions 
- Similar to Triggers, but used for more complex logic

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

Artifacts:
- Files/Directories/Objects stored as outputs from producers
- All stored in a single repository data file

NativeDirectoryArtifact:
- Contains all compressed data from a deployed NativeDirectoryContext
- Ensures there is only one NativeDirectoryContext at a time

NativeDirectoryContext:
- Deployed to a temporary directory
- Used by exterenal components running that have to write to/read from disk
- Disk assets cleaned up when disposed -- compressed and saved to wrapper Artifact

ObjectArtifact:
- Serialized object via SharpSerializer in binary mode

StringArtifact:
- Contains a basic UTF8 encoded string

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

Customizations:
- Contains extensions to other classes in the Workspace
- Currently contains structure to help Extensions find interesting correlations

Libraries:
- Contains Actions/Services which are loaded by the system

Services:
- Event-driven methods which interoperate the system with another, external system

Options:
- Modifications specified to adjust the behavior of an Action

Targets:
- Descriptions of items a Producer can act upon

Tasks:
- Association of Targets and Options to an Action
- These are used to queue actions on the Task queue

Triggers:
- Invoked by the execution of an action, or the creation/update of an Artifact
- Can add additional Actions to the Task queue

Workspaces:
- Base class for all Actions
- Provide framework features in the form of Toolboxes
- Provides ArtifactRoot to house artifacts generated by Action

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

Workspace Toolboxes:
- Singletons which provide framework features

ActionToolbox:
- Registers/Provides Actions from libraries
- Can provide either an ActionDescriptor or an instance of the Action itself (as the base 
  class "Workspace")

LibraryToolbox:
- Scans for and reads libraries
- Dispatches registration of Actions or Services

ServiceToolbox:
- Provides Services which respond to events occurring in the system

TargetToolbox:
- Registers/Provides Targets for Actions
- Can be added to by Consumers to provide additional "found" Targets to new Actions

TaskToolbox:
- Provides a Task queue for Actions
- Has a maximum number of parallelized Tasks to avoid choking tools
- Fires events when Tasks are begun and completed

TriggerToolbox:
- Registers Triggers that can be reacted to
- Provides lists of Triggers that are called by an event being performed