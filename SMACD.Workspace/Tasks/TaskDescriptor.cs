using SMACD.Workspace.Actions;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace SMACD.Workspace.Tasks
{
    /// <summary>
    /// Task descriptor used to submit a Task to be run
    /// </summary>
    public class TaskDescriptor
    {
        /// <summary>
        /// Action identifier
        /// </summary>
        public string ActionId { get; set; }

        /// <summary>
        /// Options to be configured on Action
        /// </summary>
        public Dictionary<string, string> Options { get; set; } = new Dictionary<string, string>();

        /// <summary>
        /// Targets to be acted upon
        /// </summary>
        public List<string> TargetIds { get; set; } = new List<string>();
    }

    /// <summary>
    /// Task descriptor that includes a Result from a Task
    /// </summary>
    public class ResultProvidingTaskDescriptor : TaskDescriptor
    {
        /// <summary>
        /// Action-specific Report generated by Action
        /// </summary>
        public ActionSpecificReport Result { get; set; }

        public virtual void UnbindLoops()
        {
            Result = null;
        }
    }

    internal class QueuedTaskDescriptor : ResultProvidingTaskDescriptor
    {
        internal Task<ActionSpecificReport> ActionTask { get; set; }

        public override void UnbindLoops() 
        {
            ActionTask = null;
            base.UnbindLoops();
        }
    }
}
